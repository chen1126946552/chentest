<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept-encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept-language</stringProp>
            <stringProp name="Header.value">en_US</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Token</stringProp>
            <stringProp name="Header.value">chen@ptthink.com:c0abda7c-e2c1-49c9-b7ee-432b53b6ab54:staging</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="responsedata" elementType="Argument">
            <stringProp name="Argument.name">responsedata</stringProp>
            <stringProp name="Argument.value">&quot;success&quot;:true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">stagingmiddle.datadeck.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spaceId" elementType="Argument">
            <stringProp name="Argument.name">spaceId</stringProp>
            <stringProp name="Argument.value">f6d9eb62-4e84-420b-8227-f745efc1c243</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="panelId" elementType="Argument">
            <stringProp name="Argument.name">panelId</stringProp>
            <stringProp name="Argument.value">121bb14d-e68a-4dc5-8c24-a50c8fca16fa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dsConnectionId" elementType="Argument">
            <stringProp name="Argument.name">dsConnectionId</stringProp>
            <stringProp name="Argument.value">cc30a176-8364-434a-8254-15587722edeb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="接口可用性" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1497855685000</longProp>
        <longProp name="ThreadGroup.end_time">1497855685000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="case" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DD_JP.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,path,requestdata1,requestdata2,requestdata3,responsedata1,responsedata2,responsedata3,responsedata4</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="false"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">150000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">150000</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/pt/users/signin?community=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.content.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestdata1}${requestdata2}${requestdata3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_接口可用性_获取账户" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/datasources/${spaceId}/20/accounts</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-885348099">&quot;name&quot;:&quot;auto_test&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_接口可用性_获取文件" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;saasSheet&quot;,&quot;provider&quot;:&quot;s3&quot;,&quot;params&quot;:{&quot;account.id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;account.name&quot;:&quot;auto_test&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/commands/recipient</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="1952520244">&quot;name&quot;:&quot;ptone_user-0608.csv&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_接口可用性_获取字段列表" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/datasources/${dsConnectionId}/fields </stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-64200183">&quot;name&quot;:&quot;Pt_ID&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_接口可用性_过滤器维度值列表" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;provider&quot;:&quot;s3&quot;,&quot;id&quot;:&quot;dimensionValues&quot;,&quot;params&quot;:{&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;type&quot;:&quot;dimension&quot;,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;allowGroup&quot;:true,&quot;allowFilter&quot;:1},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;field&quot;:{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:&quot;65a1e91a-63fa-49dd-8a94-8cb23bfc2fc7&quot;,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;containGroupFunction&quot;:false,&quot;allowFilter&quot;:1,&quot;allowGroup&quot;:true,&quot;type&quot;:&quot;dimension&quot;},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/commands/recipient</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-876511546">&quot;name&quot;:&quot;dd-cn-basic&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_接口可用性_Widget取数" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;17a4ae84-6631-49da-ba98-2f6b58abe15a&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;type&quot;:&quot;dimension&quot;,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;allowGroup&quot;:true,&quot;allowFilter&quot;:1},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:&quot;17a4ae84-6631-49da-ba98-2f6b58abe15a&quot;,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;containGroupFunction&quot;:false,&quot;allowFilter&quot;:1,&quot;allowGroup&quot;:true,&quot;type&quot;:&quot;dimension&quot;},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;category&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null},{&quot;id&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;uuid&quot;:&quot;a54ab9fe-8604-47dd-85b0-c258a5727b15&quot;,&quot;fieldId&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;413fa7f8-dd87-4420-8989-51afa43c6bc9&quot;},&quot;tableSettings&quot;:{&quot;tableFooter&quot;:{&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;},&quot;showTotal&quot;:false},&quot;tableHeader&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#bbbbbb&quot;},&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;},&quot;textWrap&quot;:false},&quot;table&quot;:{&quot;grid&quot;:{&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;wrap&quot;:{&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;showGrid&quot;:true},&quot;row&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true}},&quot;fontSize&quot;:&quot;14px&quot;},&quot;tableBody&quot;:{&quot;col&quot;:{&quot;settings&quot;:[],&quot;default&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;}}},&quot;fontSize&quot;:&quot;14px&quot;,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;}},&quot;odd&quot;:{&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;showNumber&quot;:false},&quot;pagination&quot;:{&quot;pageLength&quot;:10,&quot;currentPage&quot;:1,&quot;showPagination&quot;:true}},&quot;date&quot;:{&quot;visible&quot;:false},&quot;maxLimit&quot;:{&quot;rows&quot;:10000}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:{&quot;mapType&quot;:null,&quot;mapCode&quot;:null,&quot;geographyField&quot;:null},&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:null,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;uuid&quot;:&quot;a54ab9fe-8604-47dd-85b0-c258a5727b15&quot;,&quot;fieldId&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-556481337">&quot;value&quot;:99.00</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据源特殊性" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521085428000</longProp>
        <longProp name="ThreadGroup.end_time">1521085428000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_All.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,jsonpath,jsonpath1,flag,responsedata1,responsedata2,responsedata3,responsedata4,responsedata5,responsedata6,responsedata7,responsedata8,responsedata9,responsedata10,responsedata11,responsedata12,responsedata13,responsedata14,responsedata15,responsedata16,responsedata17,responsedata18,responsedata19,responsedata20,responsedata21,responsedata22,responsedata23,responsedata24,responsedata25,responsedata26</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">${Path}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="112071598">${responsedata1}</stringProp>
              <stringProp name="112071629">${responsedata2}</stringProp>
              <stringProp name="112071660">${responsedata3}</stringProp>
              <stringProp name="112071691">${responsedata4}</stringProp>
              <stringProp name="112071722">${responsedata5}</stringProp>
              <stringProp name="112071753">${responsedata6}</stringProp>
              <stringProp name="112071784">${responsedata7}</stringProp>
              <stringProp name="112071815">${responsedata8}</stringProp>
              <stringProp name="112071846">${responsedata9}</stringProp>
              <stringProp name="-820750020">${responsedata10}</stringProp>
              <stringProp name="-820749989">${responsedata11}</stringProp>
              <stringProp name="-820749958">${responsedata12}</stringProp>
              <stringProp name="-820749927">${responsedata13}</stringProp>
              <stringProp name="-820749896">${responsedata14}</stringProp>
              <stringProp name="-820749865">${responsedata15}</stringProp>
              <stringProp name="-820749834">${responsedata16}</stringProp>
              <stringProp name="-820749803">${responsedata17}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Predicate;
import net.minidev.json.JSONArray;

public class Test {    
    public static String readjson(String json, String jsonPath) {        
        try
        {
            Object value = JsonPath.read(json, jsonPath, new Predicate[0]);            
            if (value instanceof Integer)
             {
               return value.toString();
             }else if (value instanceof String)
             {
                   return value.toString();
             }else if (value instanceof Boolean)
             {
                   return value.toString();
            }else if (value instanceof JSONArray)
             {
                 JSONArray arr = (JSONArray)value;
                 if(!arr.isEmpty()){return arr.toJSONString();}                  
                 return &quot;&quot;;
            }else if (value instanceof LinkedHashMap)
             {
                  return value.toString();
             }else if (value instanceof float)
             {
                  return value.toString();
             }else{
                 return  value.toString();
             }
       }
       catch(Exception e){
           return &quot;pathnotfound&quot;;
       }        
   }    
}
//------------------------------------------------------------------------------------------------------------------
public static void fun(){
    String response_data=prev.getResponseDataAsString();//prev为JMeter预定义变量
    String JsonPath=&quot;${jsonpath1}&quot;;

    String result=Test.readjson(response_data,JsonPath);

	if(${flag}&gt;=2){
		String JsonPath1 = &quot;${jsonpath}&quot;;
    		String result1=Test.readjson(response_data,JsonPath1);
    		int resultToNum=Integer.parseInt(result1);
    		if(resultToNum!=${flag}&amp;&amp;resultToNum&lt;55){	
	    	    	Failure = true;
	    	    	FailureMessage = &quot;${name}长度检查不正确！\njosn长度:&quot;+result1+&quot;\n检查点：${flag}&quot;;
    		}else{
	    	   	for(int i=2;i&lt;${flag}+2;i++){	
			String responsedata = vars.get(&quot;responsedata&quot;+i);
//			log.info(&quot;***********${name}************&quot;+responsedata);
			     if(result.contains(responsedata)){
			    	    Failure = false;
			    	    FailureMessage = &quot;${name}检查正确！&quot;;
		//	    	    log.info(&quot;***********response************&quot;);
			     }else{
			    	    Failure = true;
			    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
			     }
			}
    		}
	}else if(${flag}==1){
		String responsedata = vars.get(&quot;responsedata2&quot;);
//		log.info(&quot;***********${name}************&quot;+responsedata);
		     if(result.equals(responsedata)){
		    	    Failure = false;
		    	    FailureMessage = &quot;${name}检查正确！&quot;;
	//	    	    log.info(&quot;***********response************&quot;);
		     }else{
		    	    Failure = true;
		    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
		     }	
	}else{
//		log.info(&quot;***********${name}************&quot;+result);
			if(result.contains(&quot;pathnotfound&quot;)){
		    	    Failure = false;
		    	    FailureMessage = &quot;${name}检查正确！&quot;;
//		    	    log.info(&quot;***********result************&quot;+result);
		     }else{
		    	    Failure = true;
		    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
		     }	
	}
}
fun();</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters">${test1} ${test2}</stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="false"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="error" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据源特殊性_未来时间" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521085428000</longProp>
        <longProp name="ThreadGroup.end_time">1521085428000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_Future.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,resquest,responsedata1,responsedata2</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="false"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${resquest}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="error" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_DSP_未来时间" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;17a4ae84-6631-49da-ba98-2f6b58abe15a&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;type&quot;:&quot;dimension&quot;,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;allowGroup&quot;:true,&quot;allowFilter&quot;:1},&quot;columnType&quot;:null},&quot;code&quot;:&quot;tomorrow&quot;,&quot;value&quot;:&quot;tomorrow&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:&quot;17a4ae84-6631-49da-ba98-2f6b58abe15a&quot;,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;containGroupFunction&quot;:false,&quot;allowFilter&quot;:1,&quot;allowGroup&quot;:true,&quot;type&quot;:&quot;dimension&quot;},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;category&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null},{&quot;id&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;uuid&quot;:&quot;a54ab9fe-8604-47dd-85b0-c258a5727b15&quot;,&quot;fieldId&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;a54ab9fe-8604-47dd-85b0-c258a5727b15&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:{&quot;mapType&quot;:null,&quot;mapCode&quot;:null,&quot;geographyField&quot;:null},&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:null,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;uuid&quot;:&quot;a54ab9fe-8604-47dd-85b0-c258a5727b15&quot;,&quot;fieldId&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;f76ff778-0fce-4685-94e5-2328d9dbd89f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">tomorrow</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="计算字段" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522753174000</longProp>
        <longProp name="ThreadGroup.end_time">1522753174000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="false"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;`9017437a-ba3f-4681-89f1-21dbc08f70c5`/10 +`87fdd0dd-59e5-4800-8fec-eb38cebca199`*1-100&quot;,&quot;formula&quot;:&quot;`9017437a-ba3f-4681-89f1-21dbc08f70c5`/10 +`87fdd0dd-59e5-4800-8fec-eb38cebca199`*1-100&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;ee6d7023-0e75-4020-a7f6-7f80089c5d4d&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;ee6d7023-0e75-4020-a7f6-7f80089c5d4d&quot;,&quot;name&quot;:&quot;Delete_Uid&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ee6d7023-0e75-4020-a7f6-7f80089c5d4d&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;9017437a-ba3f-4681-89f1-21dbc08f70c5&quot;},{&quot;id&quot;:&quot;ae9ff1a2-ceaa-497c-a3b0-65c57f475f40&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;ae9ff1a2-ceaa-497c-a3b0-65c57f475f40&quot;,&quot;name&quot;:&quot;Access&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ae9ff1a2-ceaa-497c-a3b0-65c57f475f40&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;87fdd0dd-59e5-4800-8fec-eb38cebca199&quot;}],&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;aggregator&quot;:&quot;`Delete_Uid`/10 +`Access`*1-100&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">`Delete_Uid`/10 +`Access`*1-100</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;52ddc275-c44d-4f22-840f-1e9c635bbdad&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;name&quot;:&quot;last_login_date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;fcdbda43-295c-4fbb-833b-3ba1ec647494&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-2060460138">[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1577580940">[15818.50]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_过滤器_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:null,&quot;filters&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;d91f4a57-b1de-41bf-9cd5-8e67f821efaa&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true,&quot;setting&quot;:{&quot;type&quot;:&quot;advance&quot;,&quot;items&quot;:[{&quot;code&quot;:&quot;gt&quot;,&quot;value&quot;:[140],&quot;cType&quot;:&quot;inputNumber&quot;}]}}],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;a6001bd4-2bf0-4242-8893-95986ea19fc4&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;a6001bd4-2bf0-4242-8893-95986ea19fc4&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:null,&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;4&quot;,&quot;code&quot;:&quot;upload&quot;,&quot;name&quot;:&quot;Excel/CSV&quot;},{&quot;id&quot;:&quot;f44ac2f2-b4b4-4a83-b627-acc562eff5a3&quot;,&quot;code&quot;:&quot;f44ac2f2-b4b4-4a83-b627-acc562eff5a3&quot;,&quot;name&quot;:&quot;zyf_test_DB.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;a6001bd4-2bf0-4242-8893-95986ea19fc4&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}]},&quot;spaceName&quot;:null,&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">&gt;140</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-2060460138">[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-843106152">[319.90]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_删除" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_编辑" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;code&quot;:null,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;AVG(`2ff52d12-8d77-4c8a-8a3a-8ecd594833e9`/10) +MAX(`27ee29db-3ee3-46fd-81c0-a03e2b380f6d`*1-100) -COUNTA(`7e06af03-b84a-45ac-aaf9-46f80cb284df`)&quot;,&quot;formula&quot;:&quot;AVG(`2ff52d12-8d77-4c8a-8a3a-8ecd594833e9`/10) +MAX(`27ee29db-3ee3-46fd-81c0-a03e2b380f6d`*1-100) -COUNTA(`7e06af03-b84a-45ac-aaf9-46f80cb284df`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;ee6d7023-0e75-4020-a7f6-7f80089c5d4d&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;ee6d7023-0e75-4020-a7f6-7f80089c5d4d&quot;,&quot;name&quot;:&quot;Delete_Uid&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ee6d7023-0e75-4020-a7f6-7f80089c5d4d&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;2ff52d12-8d77-4c8a-8a3a-8ecd594833e9&quot;},{&quot;id&quot;:&quot;ae9ff1a2-ceaa-497c-a3b0-65c57f475f40&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;ae9ff1a2-ceaa-497c-a3b0-65c57f475f40&quot;,&quot;name&quot;:&quot;Access&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ae9ff1a2-ceaa-497c-a3b0-65c57f475f40&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;27ee29db-3ee3-46fd-81c0-a03e2b380f6d&quot;},{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;7e06af03-b84a-45ac-aaf9-46f80cb284df&quot;}],&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;aggregator&quot;:&quot;AVG(`Delete_Uid`/10) + MAX(`Access`*1-100) - COUNTA(`source`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">AVG(`Delete_Uid`/10) + MAX(`Access`*1-100) - COUNTA(`source`)</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;52ddc275-c44d-4f22-840f-1e9c635bbdad&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;name&quot;:&quot;last_login_date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;fcdbda43-295c-4fbb-833b-3ba1ec647494&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-2060460138">[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-466592437">[-1901.76]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_删除" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_数量检查" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/${spaceId}/datasources/${dsConnectionId}/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <hostname>true</hostname>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/data/www/qa/logs/datadeck_jp_CalculatedFields/jp_datadeck_CalculatedFields.txt</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/data/www/qa/logs/datadeck_jp_CalculatedFields/errlog/jp_datadeck_CalculatedFields_errlog.txt</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="过滤器" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524035322000</longProp>
        <longProp name="ThreadGroup.end_time">1524035322000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_Filter.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,requestdata,responsedata1,responsedata2,responsedata3,responsedata4,responsedata5,responsedata6,responsedata7,responsedata8,responsedata9,responsedata10,responsedata11,responsedata12,responsedata13,responsedata14,responsedata15,responsedata16,responsedata17,responsedata18,responsedata19,responsedata20,responsedata21,responsedata22,responsedata23,responsedata24,responsedata25,responsedata26</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="false"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestdata}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_过滤器_日期类型" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[{&quot;id&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;uuid&quot;:&quot;945289fb-989d-4c87-b82e-6be221931f1a&quot;,&quot;fieldId&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;setting&quot;:{&quot;type&quot;:&quot;advance&quot;,&quot;items&quot;:[{&quot;code&quot;:&quot;ge&quot;,&quot;value&quot;:[&quot;2017/02/28&quot;],&quot;cType&quot;:&quot;date&quot;}]}}],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;fieldId&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;Day&quot;,&quot;granularity&quot;:{&quot;type&quot;:&quot;time&quot;,&quot;value&quot;:&quot;day&quot;},&quot;type&quot;:&quot;category&quot;},{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:null,&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null,&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">update_time &gt; 2017-2-28</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-1816310878">&quot;value&quot;:114801.00</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_过滤器_数值类型" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;3385494f-6103-4236-9c0c-49d9f4b58110&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;setting&quot;:{&quot;type&quot;:&quot;advance&quot;,&quot;items&quot;:[{&quot;code&quot;:&quot;gt&quot;,&quot;value&quot;:[&quot;3000&quot;],&quot;cType&quot;:&quot;inputNumber&quot;}]}}],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;fieldId&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;Day&quot;,&quot;granularity&quot;:{&quot;type&quot;:&quot;time&quot;,&quot;value&quot;:&quot;day&quot;},&quot;type&quot;:&quot;category&quot;},{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:null,&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null,&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">pt_id &gt; 3000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="930267983">&quot;value&quot;:752161.00</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_过滤器_字符类型_选择" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:&quot;8ce5ce2c-dc6e-48b8-b3e4-8a48bdba6b4f&quot;,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;setting&quot;:{&quot;type&quot;:&quot;select&quot;,&quot;items&quot;:[{&quot;code&quot;:&quot;in&quot;,&quot;value&quot;:[&quot;dd-cn-ga&quot;,&quot;dd-cn-invite&quot;],&quot;cType&quot;:&quot;multipleList&quot;,&quot;name&quot;:[&quot;dd-cn-ga&quot;,&quot;dd-cn-invite&quot;]}]}}],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;fieldId&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;Day&quot;,&quot;granularity&quot;:{&quot;type&quot;:&quot;time&quot;,&quot;value&quot;:&quot;day&quot;},&quot;type&quot;:&quot;category&quot;},{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:null,&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null,&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">source = &quot;dd-cn-ga&quot;, &quot;dd-cn-invite&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="1982507340">&quot;value&quot;:9532.00</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_过滤器_字符类型_全部" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:&quot;8ce5ce2c-dc6e-48b8-b3e4-8a48bdba6b4f&quot;,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;setting&quot;:{&quot;type&quot;:&quot;select&quot;,&quot;items&quot;:[{&quot;code&quot;:&quot;in&quot;,&quot;value&quot;:[],&quot;cType&quot;:&quot;multipleList&quot;}]}}],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;fieldId&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;Day&quot;,&quot;granularity&quot;:{&quot;type&quot;:&quot;time&quot;,&quot;value&quot;:&quot;day&quot;},&quot;type&quot;:&quot;category&quot;},{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:null,&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null,&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">source</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="1173653163">&quot;value&quot;:3939622.00</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_过滤器_字符类型_条件" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;1&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[{&quot;id&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;uuid&quot;:&quot;8ce5ce2c-dc6e-48b8-b3e4-8a48bdba6b4f&quot;,&quot;fieldId&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;name&quot;:&quot;source&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6a5c529d-3aeb-4f0f-8c89-8b00680e1579&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;filter&quot;,&quot;setting&quot;:{&quot;type&quot;:&quot;advance&quot;,&quot;items&quot;:[{&quot;code&quot;:&quot;contain&quot;,&quot;value&quot;:[&quot;cn&quot;,&quot;jp&quot;],&quot;cType&quot;:&quot;tagInput&quot;}]}}],&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;4965240f-1cc4-4162-a8f2-b179a8b40849&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;uuid&quot;:&quot;1778828d-a535-4f62-9273-5260a77f5ea8&quot;,&quot;fieldId&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;d07b98fd-6661-449b-926d-547585aa9b9c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;Day&quot;,&quot;granularity&quot;:{&quot;type&quot;:&quot;time&quot;,&quot;value&quot;:&quot;day&quot;},&quot;type&quot;:&quot;category&quot;},{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:10000},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:null,&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;20&quot;,&quot;code&quot;:&quot;s3&quot;,&quot;name&quot;:&quot;Amazon S3&quot;},{&quot;id&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;code&quot;:&quot;6669522e-2706-4fc0-90e4-c6bab570dd71&quot;,&quot;name&quot;:&quot;auto_test&quot;},{&quot;id&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;code&quot;:&quot;67da14c8-e8ba-49f9-8059-cbcf7df483d3&quot;,&quot;name&quot;:&quot;ptone_user-0608.csv&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1528188064,&quot;panelUrl&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;,&quot;compareWithPreviousPeriod&quot;:{&quot;compareWithPreviousPeriodStatus&quot;:false,&quot;autoInsert&quot;:true,&quot;comparePeriod&quot;:&quot;none&quot;,&quot;compareDisplay&quot;:&quot;&quot;,&quot;compareFields&quot;:[{&quot;id&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;uuid&quot;:&quot;d919118b-3e42-40b1-9bf0-bb34ce6593ec&quot;,&quot;fieldId&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;bd278eca-930a-4c18-b7fc-ee63175a7d17&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:&quot;SUM&quot;,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}]},&quot;spaceName&quot;:null,&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">source  contain  &quot;cn&quot;, &quot;jp&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1936047365">${responsedata}</stringProp>
              <stringProp name="-883458205">&quot;value&quot;:3397286.00</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/chenchen/Desktop/auto/Staging-DD-AmazonS3/script/s3.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/chenchen/Desktop/auto/Staging-DD-AmazonS3/script/s3-error.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
