<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept-encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept-language</stringProp>
            <stringProp name="Header.value">en_US</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Token</stringProp>
            <stringProp name="Header.value">chen@ptthink.com:c0abda7c-e2c1-49c9-b7ee-432b53b6ab54:staging</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="responsedata" elementType="Argument">
            <stringProp name="Argument.name">responsedata</stringProp>
            <stringProp name="Argument.value">&quot;success&quot;:true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">stagingmiddle.datadeck.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spaceId" elementType="Argument">
            <stringProp name="Argument.name">spaceId</stringProp>
            <stringProp name="Argument.value">f6d9eb62-4e84-420b-8227-f745efc1c243</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="panelId" elementType="Argument">
            <stringProp name="Argument.name">panelId</stringProp>
            <stringProp name="Argument.value">121bb14d-e68a-4dc5-8c24-a50c8fca16fa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dsConnectionId" elementType="Argument">
            <stringProp name="Argument.name">dsConnectionId</stringProp>
            <stringProp name="Argument.value">212ddcf2-0fb0-49ee-ae50-8f03a5f35844</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="第三方接口可用性" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1497855685000</longProp>
        <longProp name="ThreadGroup.end_time">1497855685000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="case" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DD_JP.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,path,requestdata1,requestdata2,requestdata3,responsedata1,responsedata2,responsedata3,responsedata4</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">150000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">150000</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/pt/users/signin?community=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.content.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestdata1}${requestdata2}${requestdata3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">15000000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <hostname>true</hostname>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据源特殊性" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521085428000</longProp>
        <longProp name="ThreadGroup.end_time">1521085428000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_All.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,jsonpath,jsonpath1,flag,responsedata1,responsedata2,responsedata3,responsedata4,responsedata5,responsedata6,responsedata7,responsedata8,responsedata9,responsedata10,responsedata11,responsedata12,responsedata13,responsedata14,responsedata15,responsedata16,responsedata17,responsedata18,responsedata19,responsedata20,responsedata21,responsedata22,responsedata23,responsedata24,responsedata25,responsedata26</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
                <stringProp name="112071722">${responsedata5}</stringProp>
                <stringProp name="112071753">${responsedata6}</stringProp>
                <stringProp name="112071784">${responsedata7}</stringProp>
                <stringProp name="112071815">${responsedata8}</stringProp>
                <stringProp name="112071846">${responsedata9}</stringProp>
                <stringProp name="-820750020">${responsedata10}</stringProp>
                <stringProp name="-820749989">${responsedata11}</stringProp>
                <stringProp name="-820749958">${responsedata12}</stringProp>
                <stringProp name="-820749927">${responsedata13}</stringProp>
                <stringProp name="-820749896">${responsedata14}</stringProp>
                <stringProp name="-820749865">${responsedata15}</stringProp>
                <stringProp name="-820749834">${responsedata16}</stringProp>
                <stringProp name="-820749803">${responsedata17}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Predicate;
import net.minidev.json.JSONArray;

public class Test {    
    public static String readjson(String json, String jsonPath) {        
        try
        {
            Object value = JsonPath.read(json, jsonPath, new Predicate[0]);            
            if (value instanceof Integer)
             {
               return value.toString();
             }else if (value instanceof String)
             {
                   return value.toString();
             }else if (value instanceof Boolean)
             {
                   return value.toString();
            }else if (value instanceof JSONArray)
             {
                 JSONArray arr = (JSONArray)value;
                 if(!arr.isEmpty()){return arr.toJSONString();}                  
                 return &quot;&quot;;
            }else if (value instanceof LinkedHashMap)
             {
                  return value.toString();
             }else if (value instanceof float)
             {
                  return value.toString();
             }else{
                 return  value.toString();
             }
       }
       catch(Exception e){
           return &quot;pathnotfound&quot;;
       }        
   }    
}
//------------------------------------------------------------------------------------------------------------------
public static void fun(){
    String response_data=prev.getResponseDataAsString();//prev为JMeter预定义变量
    String JsonPath=&quot;${jsonpath1}&quot;;

    String result=Test.readjson(response_data,JsonPath);

	if(${flag}&gt;=2){
		String JsonPath1 = &quot;${jsonpath}&quot;;
    		String result1=Test.readjson(response_data,JsonPath1);
    		int resultToNum=Integer.parseInt(result1);
    		if(resultToNum!=${flag}&amp;&amp;resultToNum&lt;55){	
	    	    	Failure = true;
	    	    	FailureMessage = &quot;${name}长度检查不正确！\njosn长度:&quot;+result1+&quot;\n检查点：${flag}&quot;;
    		}else{
	    	   	for(int i=2;i&lt;${flag}+2;i++){	
			String responsedata = vars.get(&quot;responsedata&quot;+i);
//			log.info(&quot;***********${name}************&quot;+responsedata);
			     if(result.contains(responsedata)){
			    	    Failure = false;
			    	    FailureMessage = &quot;${name}检查正确！&quot;;
		//	    	    log.info(&quot;***********response************&quot;);
			     }else{
			    	    Failure = true;
			    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
			     }
			}
    		}
	}else if(${flag}==1){
		String responsedata = vars.get(&quot;responsedata2&quot;);
//		log.info(&quot;***********${name}************&quot;+responsedata);
		     if(result.equals(responsedata)){
		    	    Failure = false;
		    	    FailureMessage = &quot;${name}检查正确！&quot;;
	//	    	    log.info(&quot;***********response************&quot;);
		     }else{
		    	    Failure = true;
		    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
		     }	
	}else{
//		log.info(&quot;***********${name}************&quot;+result);
			if(result.contains(&quot;pathnotfound&quot;)){
		    	    Failure = false;
		    	    FailureMessage = &quot;${name}检查正确！&quot;;
//		    	    log.info(&quot;***********result************&quot;+result);
		     }else{
		    	    Failure = true;
		    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
		     }	
	}
}
fun();</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters">${test1} ${test2}</stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="error" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据源特殊性_未来时间" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521085428000</longProp>
        <longProp name="ThreadGroup.end_time">1521085428000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_Future.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,resquest,responsedata1,responsedata2</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${resquest}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="error" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="计算字段-OK" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522753174000</longProp>
        <longProp name="ThreadGroup.end_time">1522753174000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;(`92f8e206-8450-4059-876a-10d83d5d3e67`+`6bcdef31-0482-48d0-bd6a-baed9217255a`)/2-`355b12fa-6152-45f3-b4dd-c2da5697746f`*2&quot;,&quot;formula&quot;:&quot;(`92f8e206-8450-4059-876a-10d83d5d3e67`+`6bcdef31-0482-48d0-bd6a-baed9217255a`)/2-`355b12fa-6152-45f3-b4dd-c2da5697746f`*2&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;92f8e206-8450-4059-876a-10d83d5d3e67&quot;},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;6bcdef31-0482-48d0-bd6a-baed9217255a&quot;},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;355b12fa-6152-45f3-b4dd-c2da5697746f&quot;}],&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;aggregator&quot;:&quot;(`Users`+`Users`)/2-`Users`*2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;efe3197e-5a57-468a-a329-a849b3a28a29&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/04/09|2018/04/15&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;aecdb6f9-631c-4540-9b9e-0047a440f1d2&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-471703970">[-204004.00]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_删除" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_数量检查" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/${spaceId}/datasources/${dsConnectionId}/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <hostname>true</hostname>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/data/www/qa/logs/datadeck_jp_CalculatedFields/jp_datadeck_CalculatedFields.txt</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/data/www/qa/logs/datadeck_jp_CalculatedFields/errlog/jp_datadeck_CalculatedFields_errlog.txt</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="过滤器" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524035322000</longProp>
        <longProp name="ThreadGroup.end_time">1524035322000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_Filter.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,requestdata,responsedata1,responsedata2,responsedata3,responsedata4,responsedata5,responsedata6,responsedata7,responsedata8,responsedata9,responsedata10,responsedata11,responsedata12,responsedata13,responsedata14,responsedata15,responsedata16,responsedata17,responsedata18,responsedata19,responsedata20,responsedata21,responsedata22,responsedata23,responsedata24,responsedata25,responsedata26</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestdata}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="细分-OK" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523516449000</longProp>
        <longProp name="ThreadGroup.end_time">1523516449000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_GA默认字段_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;test&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;9307b63c-c974-46c9-829f-055c3426c6d8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[],&quot;segment&quot;:{&quot;id&quot;:&quot;gaid::-3&quot;,&quot;name&quot;:&quot;Returning Users&quot;,&quot;type&quot;:&quot;googleanalysis&quot;},&quot;time&quot;:{&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/04/05|2018/04/11&quot;,&quot;isIncludeToday&quot;:null,&quot;field&quot;:null},&quot;fields&quot;:[{&quot;id&quot;:&quot;ga:date&quot;,&quot;uuid&quot;:&quot;9307b63c-c974-46c9-829f-055c3426c6d8&quot;,&quot;fieldId&quot;:&quot;130&quot;,&quot;name&quot;:&quot;Date&quot;,&quot;dataType&quot;:&quot;DATE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyyMMdd&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;containGroupFunction&quot;:false,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true,&quot;code&quot;:&quot;ga:date&quot;,&quot;allowFilter&quot;:1},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;category&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:&quot;dc5073a6-c7f4-4514-886d-5d7e99a96e11&quot;,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;containGroupFunction&quot;:false,&quot;allowFilter&quot;:1,&quot;type&quot;:&quot;metrics&quot;,&quot;code&quot;:&quot;ga:users&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;dc5073a6-c7f4-4514-886d-5d7e99a96e11&quot;},&quot;tableSettings&quot;:{&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;col&quot;:{&quot;default&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]},&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;odd&quot;:{&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;even&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;table&quot;:{&quot;grid&quot;:{&quot;row&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true},&quot;col&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true},&quot;wrap&quot;:{&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;showGrid&quot;:true}},&quot;pageLength&quot;:3,&quot;fontSize&quot;:&quot;14px&quot;},&quot;pagination&quot;:{&quot;pageLength&quot;:10,&quot;showPagination&quot;:true,&quot;currentPage&quot;:1},&quot;tableFooter&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;},&quot;showTotal&quot;:false,&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;}},&quot;tableHeader&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#bbbbbb&quot;},&quot;textWrap&quot;:false}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:{&quot;mapType&quot;:null,&quot;mapCode&quot;:null,&quot;geographyField&quot;:null},&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:null,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;code&quot;:&quot;googleanalysis&quot;,&quot;name&quot;:&quot;Google Analytics&quot;},{&quot;id&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;code&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;name&quot;:&quot;peterangel536@gmail.com&quot;},{&quot;id&quot;:&quot;102134393&quot;,&quot;code&quot;:&quot;102134393&quot;,&quot;name&quot;:&quot;All Web Site Data&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1523617163,&quot;panelUrl&quot;:null,&quot;spaceName&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-886682240">[&quot;Date&quot;,&quot;Users&quot;]</stringProp>
              <stringProp name="-1486635055">[&quot;20180405&quot;,3897.00]</stringProp>
              <stringProp name="-740083372">[&quot;20180406&quot;,4966.00]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_GA创建字段_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;test&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;9307b63c-c974-46c9-829f-055c3426c6d8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[],&quot;segment&quot;:{&quot;id&quot;:&quot;gaid::2xS-ChhkT--bIQiAZKFrHg&quot;,&quot;name&quot;:&quot;chentest&quot;,&quot;type&quot;:&quot;googleanalysis&quot;},&quot;time&quot;:{&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/04/05|2018/04/11&quot;,&quot;isIncludeToday&quot;:null,&quot;field&quot;:null},&quot;fields&quot;:[{&quot;id&quot;:&quot;ga:date&quot;,&quot;uuid&quot;:&quot;9307b63c-c974-46c9-829f-055c3426c6d8&quot;,&quot;fieldId&quot;:&quot;130&quot;,&quot;name&quot;:&quot;Date&quot;,&quot;dataType&quot;:&quot;DATE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyyMMdd&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;containGroupFunction&quot;:false,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true,&quot;code&quot;:&quot;ga:date&quot;,&quot;allowFilter&quot;:1},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;category&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:&quot;dc5073a6-c7f4-4514-886d-5d7e99a96e11&quot;,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;containGroupFunction&quot;:false,&quot;allowFilter&quot;:1,&quot;type&quot;:&quot;metrics&quot;,&quot;code&quot;:&quot;ga:users&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;dc5073a6-c7f4-4514-886d-5d7e99a96e11&quot;},&quot;tableSettings&quot;:{&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;col&quot;:{&quot;default&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]},&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;odd&quot;:{&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;even&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;table&quot;:{&quot;grid&quot;:{&quot;row&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true},&quot;col&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true},&quot;wrap&quot;:{&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;showGrid&quot;:true}},&quot;pageLength&quot;:3,&quot;fontSize&quot;:&quot;14px&quot;},&quot;pagination&quot;:{&quot;pageLength&quot;:10,&quot;showPagination&quot;:true,&quot;currentPage&quot;:1},&quot;tableFooter&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;},&quot;showTotal&quot;:false,&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;}},&quot;tableHeader&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#bbbbbb&quot;},&quot;textWrap&quot;:false}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:{&quot;mapType&quot;:null,&quot;mapCode&quot;:null,&quot;geographyField&quot;:null},&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:null,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;code&quot;:&quot;googleanalysis&quot;,&quot;name&quot;:&quot;Google Analytics&quot;},{&quot;id&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;code&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;name&quot;:&quot;peterangel536@gmail.com&quot;},{&quot;id&quot;:&quot;102134393&quot;,&quot;code&quot;:&quot;102134393&quot;,&quot;name&quot;:&quot;All Web Site Data&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1523617163,&quot;panelUrl&quot;:null,&quot;spaceName&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-886682240">[&quot;Date&quot;,&quot;Users&quot;]</stringProp>
              <stringProp name="-861740213">[&quot;20180405&quot;,3451.00]</stringProp>
              <stringProp name="-81144461">[&quot;20180406&quot;,3722.00]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_检查数量_创建前" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/spaces/${spaceId}/datasources/${dsConnectionId}/segments</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getSagmentData" enabled="true">
            <stringProp name="VAR">SagmentData</stringProp>
            <stringProp name="JSONPATH">$.data</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String checkData = vars.get(&quot;SagmentData&quot;);
log.info(&quot;***********SagmentData:&quot;+checkData);
if(checkData.contains(&quot;auto_test_Segment_Sessions&quot;) || checkData.contains(&quot;auto_test_Segment_User&quot;)){
	Failure = true;
	FailureMessage = &quot;Sagment字段检查错误！&quot;;
}else {
	Failure = false;
	FailureMessage = &quot;Sagment字段检查正确！&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Predicate;
import net.minidev.json.JSONArray;

public class Test {    
	public static String readjson(String json, String jsonPath) {        
        try
        {
            Object value = JsonPath.read(json, jsonPath, new Predicate[0]);            
            if (value instanceof Integer)
             {
               return value.toString();
             }else if (value instanceof String)
             {
                   return value.toString();
             }else if (value instanceof Boolean)
             {
                   return value.toString();
            }else if (value instanceof JSONArray)
             {
                 JSONArray arr = (JSONArray)value;
                 if(!arr.isEmpty()){return arr.toJSONString();}                  
                 return &quot;&quot;;
            }else if (value instanceof LinkedHashMap)
             {
                  return value.toString();
             }else if (value instanceof float)
             {
                  return value.toString();
             }else{
                 return  value.toString();
             }
       }
       catch(Exception e){
           return &quot;pathnotfound&quot;;
       }        
   	}
   	 
   	public static void fun(){
	String response_data=prev.getResponseDataAsString();//prev为JMeter预定义变量
	String JsonPath=&quot;$.data&quot;;
	
	String result=Test.readjson(response_data,JsonPath);

	String JsonPath1 = &quot;$.data.length()&quot;;
	String result1=Test.readjson(response_data,JsonPath1);
	int resultNum=Integer.parseInt(result1);
//	static listNum = 0;
//	${__setProperty(listNum,${resultNum},false)};
	${__setProperty(listNumtest,resultNum,false)};
	props.put(&quot;listNum&quot;, &quot;&quot;+vars.get(&quot;resultNum&quot;));
	log.info(&quot;**********resu:&quot;+resultNum+&quot;  listNum: &quot;+vars.get(&quot;resultNum&quot;)+&quot;  listNumtest: &quot;+listNumtest);
	if(resultNum!=69){	
	    	Failure = true;
	    	FailureMessage = &quot;Sagment字段数量检查不正确！\n&quot;+result1;
	}else{
		Failure = false;
	    	FailureMessage = &quot;Sagment字段数量检查正确！\n&quot;+result1;
	}
	}   
}
//------------------------------------------------------------------------------------------------------------------

Test.fun();</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters">${test1} ${test2}</stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_创建_会话" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;segmentId&quot;:null,&quot;name&quot;:&quot;auto_test_Segment_Sessions&quot;,&quot;scope&quot;:&quot;sessions&quot;,&quot;operation&quot;:&quot;include&quot;,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;conditions&quot;:[[{&quot;field&quot;:{&quot;id&quot;:&quot;ga:newUsers&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2&quot;,&quot;name&quot;:&quot;New Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:newUsers&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;operator&quot;:&quot;gt&quot;,&quot;value&quot;:&quot;0&quot;}],[{&quot;field&quot;:{&quot;id&quot;:&quot;ga:newUsers&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2&quot;,&quot;name&quot;:&quot;New Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:newUsers&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;operator&quot;:&quot;lt&quot;,&quot;value&quot;:&quot;10&quot;}]]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/segments/connection/${dsConnectionId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getsegmentId" enabled="true">
            <stringProp name="VAR">segmentId</stringProp>
            <stringProp name="JSONPATH">$.data.segmentId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-1056644654">&quot;errorCode&quot;:null</stringProp>
              <stringProp name="1111804639">&quot;name&quot;:&quot;auto_test_Segment_Sessions&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_创建_会话_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;test&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;591f2af7-f31f-4a2e-8baa-d61070db633e&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[],&quot;segment&quot;:{&quot;id&quot;:&quot;${segmentId}&quot;,&quot;name&quot;:&quot;auto_test_Segment&quot;},&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/04/05|2018/04/11&quot;},&quot;fields&quot;:[{&quot;id&quot;:&quot;ga:date&quot;,&quot;uuid&quot;:&quot;591f2af7-f31f-4a2e-8baa-d61070db633e&quot;,&quot;fieldId&quot;:&quot;130&quot;,&quot;name&quot;:&quot;Date&quot;,&quot;dataType&quot;:&quot;DATE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyyMMdd&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:date&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;category&quot;},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:&quot;cb108cd1-ba9e-48ff-874b-78ff446cee55&quot;,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;labelName&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;cb108cd1-ba9e-48ff-874b-78ff446cee55&quot;},&quot;tableSettings&quot;:{&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;},&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10},&quot;tableBody&quot;:{&quot;col&quot;:{&quot;settings&quot;:[],&quot;default&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}}},&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;odd&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#f9f9f9&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;}},&quot;even&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;showNumber&quot;:false,&quot;fontSize&quot;:&quot;14px&quot;},&quot;table&quot;:{&quot;grid&quot;:{&quot;wrap&quot;:{&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;showGrid&quot;:true},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;showGrid&quot;:true}},&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3},&quot;tableHeader&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#bbbbbb&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;textWrap&quot;:false}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:{&quot;mapType&quot;:null,&quot;mapCode&quot;:null,&quot;geographyField&quot;:null},&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:&quot;&quot;,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;code&quot;:&quot;googleanalysis&quot;,&quot;name&quot;:&quot;Google Analytics&quot;},{&quot;id&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;code&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;name&quot;:&quot;peterangel536@gmail.com&quot;},{&quot;id&quot;:&quot;100113931&quot;,&quot;code&quot;:&quot;100113931&quot;,&quot;name&quot;:&quot;W01V02 长安马自达官网(PC) Basic Data&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1523617163,&quot;panelUrl&quot;:null,&quot;spaceName&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-886682240">[&quot;Date&quot;,&quot;Users&quot;]</stringProp>
              <stringProp name="830093810">[&quot;20180405&quot;,20808.00]</stringProp>
              <stringProp name="1182941724">[&quot;20180406&quot;,18510.00]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_删除_会话" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/segments/${segmentId}/connection/${dsConnectionId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_检查数量_删除后" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/spaces/${spaceId}/datasources/${dsConnectionId}/segments</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Predicate;
import net.minidev.json.JSONArray;

public class Test {    
	public static String readjson(String json, String jsonPath) {        
        try
        {
            Object value = JsonPath.read(json, jsonPath, new Predicate[0]);            
            if (value instanceof Integer)
             {
               return value.toString();
             }else if (value instanceof String)
             {
                   return value.toString();
             }else if (value instanceof Boolean)
             {
                   return value.toString();
            }else if (value instanceof JSONArray)
             {
                 JSONArray arr = (JSONArray)value;
                 if(!arr.isEmpty()){return arr.toJSONString();}                  
                 return &quot;&quot;;
            }else if (value instanceof LinkedHashMap)
             {
                  return value.toString();
             }else if (value instanceof float)
             {
                  return value.toString();
             }else{
                 return  value.toString();
             }
       }
       catch(Exception e){
           return &quot;pathnotfound&quot;;
       }        
   	}
   	 
   	public static void fun(){
	String response_data=prev.getResponseDataAsString();//prev为JMeter预定义变量
	String JsonPath=&quot;$.data&quot;;
	
	String result=Test.readjson(response_data,JsonPath);

	String JsonPath1 = &quot;$.data.length()&quot;;
	String result1=Test.readjson(response_data,JsonPath1);
	int resultToNum=Integer.parseInt(result1);

	log.info(&quot;**********resu:&quot;+resultNum+&quot;  listNum: &quot;+vars.get(&quot;resultNum&quot;)+&quot;  listNumtest: &quot;+listNumtest);
	log.info(&quot;**********SagmentData:&quot;+${SagmentData});
//	int listNumber=vars.get(&quot;listNum&quot;);
//	log.info(&quot;************listNum:&quot;+vars.get(&quot;listNum&quot;)+&quot; : &quot;);
	if(resultToNum!=listNumber){	
	    	Failure = true;
	    	FailureMessage = &quot;Sagment字段数量检查不正确！\n&quot;+result1;
	}else{
		Failure = false;
	    	FailureMessage = &quot;Sagment字段数量检查正确！\n&quot;+result1;
	}
	}   
}
//------------------------------------------------------------------------------------------------------------------

Test.fun();</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters">${test1} ${test2}</stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getSagmentData" enabled="true">
            <stringProp name="VAR">SagmentData</stringProp>
            <stringProp name="JSONPATH">$.data</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String checkData = vars.get(&quot;SagmentData&quot;);
log.info(&quot;***********SagmentData:&quot;+checkData);
if(checkData.contains(&quot;auto_test_Segment_Sessions&quot;)){
	Failure = true;
	FailureMessage = &quot;Sagment字段检查错误！&quot;;
}else {
	Failure = false;
	FailureMessage = &quot;Sagment字段检查正确！&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_创建_用户" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;segmentId&quot;:null,&quot;name&quot;:&quot;auto_test_Segment_User&quot;,&quot;scope&quot;:&quot;users&quot;,&quot;operation&quot;:&quot;exclude&quot;,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;conditions&quot;:[[{&quot;field&quot;:{&quot;id&quot;:&quot;ga:sessions&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;4&quot;,&quot;name&quot;:&quot;Sessions&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:sessions&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;operator&quot;:&quot;lt&quot;,&quot;value&quot;:&quot;3&quot;}]]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/segments/connection/${dsConnectionId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">segmentId</stringProp>
            <stringProp name="JSONPATH">$.data.segmentId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-1056644654">&quot;errorCode&quot;:null</stringProp>
              <stringProp name="1666056817">&quot;name&quot;:&quot;auto_test_Segment_User&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_创建_用户_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;panelId&quot;:&quot;${panelId}&quot;,&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;${spaceId}&quot;,&quot;dsConnectionId&quot;:&quot;${dsConnectionId}&quot;,&quot;name&quot;:&quot;test&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;sort&quot;:{&quot;uuid&quot;:&quot;9307b63c-c974-46c9-829f-055c3426c6d8&quot;,&quot;order&quot;:&quot;asc&quot;},&quot;filters&quot;:[],&quot;segment&quot;:{&quot;id&quot;:&quot;${segmentId}&quot;,&quot;name&quot;:&quot;auto_test_Segment_User&quot;},&quot;time&quot;:{&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/04/05|2018/04/11&quot;,&quot;isIncludeToday&quot;:null,&quot;field&quot;:null},&quot;fields&quot;:[{&quot;id&quot;:&quot;ga:date&quot;,&quot;uuid&quot;:&quot;9307b63c-c974-46c9-829f-055c3426c6d8&quot;,&quot;fieldId&quot;:&quot;130&quot;,&quot;name&quot;:&quot;Date&quot;,&quot;dataType&quot;:&quot;DATE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyyMMdd&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;type&quot;:&quot;dimension&quot;,&quot;allowFilter&quot;:1,&quot;allowGroup&quot;:true,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:date&quot;},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;category&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:&quot;dc5073a6-c7f4-4514-886d-5d7e99a96e11&quot;,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;containGroupFunction&quot;:false,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true,&quot;allowFilter&quot;:1,&quot;code&quot;:&quot;ga:users&quot;},&quot;columnType&quot;:null,&quot;alias&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null}],&quot;uid&quot;:null,&quot;isTitleUpdate&quot;:&quot;1&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;item&quot;:&quot;dc5073a6-c7f4-4514-886d-5d7e99a96e11&quot;,&quot;visible&quot;:true},&quot;tableSettings&quot;:{&quot;tableBody&quot;:{&quot;row&quot;:{&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;even&quot;:{&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#444444&quot;}},&quot;textWrap&quot;:false},&quot;fontSize&quot;:&quot;14px&quot;,&quot;col&quot;:{&quot;settings&quot;:[],&quot;default&quot;:{&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;},&quot;fontColor&quot;:{&quot;type&quot;:&quot;custom&quot;,&quot;color&quot;:&quot;transparent&quot;}}},&quot;showNumber&quot;:false},&quot;tableHeader&quot;:{&quot;fontColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#bbbbbb&quot;},&quot;textWrap&quot;:false,&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;}},&quot;tableFooter&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#ffffff&quot;},&quot;showTotal&quot;:false},&quot;pagination&quot;:{&quot;currentPage&quot;:1,&quot;showPagination&quot;:true,&quot;pageLength&quot;:10},&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;row&quot;:{&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;showGrid&quot;:true},&quot;wrap&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true},&quot;col&quot;:{&quot;gridColor&quot;:{&quot;type&quot;:&quot;theme&quot;,&quot;color&quot;:&quot;#e9e9e9&quot;},&quot;showGrid&quot;:true}},&quot;pageLength&quot;:3}}},&quot;widgetType&quot;:&quot;chart&quot;,&quot;map&quot;:{&quot;mapType&quot;:null,&quot;mapCode&quot;:null,&quot;geographyField&quot;:null},&quot;sourceType&quot;:null,&quot;isDemo&quot;:0,&quot;isExample&quot;:null,&quot;templetId&quot;:null,&quot;isPreview&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;toolData&quot;:{&quot;value&quot;:null,&quot;extend&quot;:null},&quot;layout&quot;:null,&quot;children&quot;:null,&quot;disconnectMessage&quot;:null,&quot;dsInfo&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;code&quot;:&quot;googleanalysis&quot;,&quot;name&quot;:&quot;Google Analytics&quot;},{&quot;id&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;code&quot;:&quot;e608388b-d138-4720-b8a6-029ed8b5a7b8&quot;,&quot;name&quot;:&quot;peterangel536@gmail.com&quot;},{&quot;id&quot;:&quot;102134393&quot;,&quot;code&quot;:&quot;102134393&quot;,&quot;name&quot;:&quot;All Web Site Data&quot;}]},&quot;description&quot;:null,&quot;createTime&quot;:1523617163,&quot;panelUrl&quot;:null,&quot;spaceName&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-886682240">[&quot;Date&quot;,&quot;Users&quot;]</stringProp>
              <stringProp name="-1853133329">[&quot;20180405&quot;,2058.00]</stringProp>
              <stringProp name="-1908324082">[&quot;20180406&quot;,2243.00]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_删除_用户" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/segments/${segmentId}/connection/${dsConnectionId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_Sagment_自定义字段_检查数量_删除后" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/spaces/${spaceId}/datasources/${dsConnectionId}/segments</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Predicate;
import net.minidev.json.JSONArray;

public class Test {    
	public static String readjson(String json, String jsonPath) {        
        try
        {
            Object value = JsonPath.read(json, jsonPath, new Predicate[0]);            
            if (value instanceof Integer)
             {
               return value.toString();
             }else if (value instanceof String)
             {
                   return value.toString();
             }else if (value instanceof Boolean)
             {
                   return value.toString();
            }else if (value instanceof JSONArray)
             {
                 JSONArray arr = (JSONArray)value;
                 if(!arr.isEmpty()){return arr.toJSONString();}                  
                 return &quot;&quot;;
            }else if (value instanceof LinkedHashMap)
             {
                  return value.toString();
             }else if (value instanceof float)
             {
                  return value.toString();
             }else{
                 return  value.toString();
             }
       }
       catch(Exception e){
           return &quot;pathnotfound&quot;;
       }        
   	}
   	 
   	public static void fun(){
	String response_data=prev.getResponseDataAsString();//prev为JMeter预定义变量
	String JsonPath=&quot;$.data&quot;;
	
	String result=Test.readjson(response_data,JsonPath);

	String JsonPath1 = &quot;$.data.length()&quot;;
	String result1=Test.readjson(response_data,JsonPath1);
	int resultToNum=Integer.parseInt(result1);

	log.info(&quot;**********resu:&quot;+resultNum+&quot;  listNum: &quot;+vars.get(&quot;resultNum&quot;)+&quot;  listNumtest: &quot;+listNumtest);
	log.info(&quot;**********SagmentData:&quot;+${SagmentData});
//	int listNumber=vars.get(&quot;listNum&quot;);
//	log.info(&quot;************listNum:&quot;+vars.get(&quot;listNum&quot;)+&quot; : &quot;);
	if(resultToNum!=listNumber){	
	    	Failure = true;
	    	FailureMessage = &quot;Sagment字段数量检查不正确！\n&quot;+result1;
	}else{
		Failure = false;
	    	FailureMessage = &quot;Sagment字段数量检查正确！\n&quot;+result1;
	}
	}   
}
//------------------------------------------------------------------------------------------------------------------

Test.fun();</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters">${test1} ${test2}</stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getSagmentData" enabled="true">
            <stringProp name="VAR">SagmentData</stringProp>
            <stringProp name="JSONPATH">$.data</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String checkData = vars.get(&quot;SagmentData&quot;);
log.info(&quot;***********SagmentData:&quot;+checkData);
if(checkData.contains(&quot;auto_test_Segment_User&quot;)){
	Failure = true;
	FailureMessage = &quot;Sagment字段检查错误！&quot;;
}else {
	Failure = false;
	FailureMessage = &quot;Sagment字段检查正确！&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/data/www/qa/logs/datadeck_DataSource/GoogleAnalytics/jp_datadeck_interface.txt</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/data/www/qa/logs/datadeck_DataSource/GoogleAnalytics/errlog/jp_datadeck_interface_errlog.txt</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
