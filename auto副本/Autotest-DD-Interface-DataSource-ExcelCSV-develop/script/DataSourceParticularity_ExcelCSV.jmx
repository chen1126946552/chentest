<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept-encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept-language</stringProp>
            <stringProp name="Header.value">en_US</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Token</stringProp>
            <stringProp name="Header.value">${sid}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="responsedata" elementType="Argument">
            <stringProp name="Argument.name">responsedata</stringProp>
            <stringProp name="Argument.value">&quot;success&quot;:true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="panelTitle" elementType="Argument">
            <stringProp name="Argument.name">panelTitle</stringProp>
            <stringProp name="Argument.value">auto_testPanels</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WidgetName" elementType="Argument">
            <stringProp name="Argument.name">WidgetName</stringProp>
            <stringProp name="Argument.value">auto_testWidget</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CreatSpaceId" elementType="Argument">
            <stringProp name="Argument.name">CreatSpaceId</stringProp>
            <stringProp name="Argument.value">${__time(,)}${__RandomString(23,qwertyuiopasdfghjklzxcvbnm1234567890,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userEmail" elementType="Argument">
            <stringProp name="Argument.name">userEmail</stringProp>
            <stringProp name="Argument.value">dd_auto@ptmind.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="currentPanelId" elementType="Argument">
            <stringProp name="Argument.name">currentPanelId</stringProp>
            <stringProp name="Argument.value">${__time(,)}${__RandomString(22,qwertyuiopasdfghjklzxcvbnm1234567890,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uuid" elementType="Argument">
            <stringProp name="Argument.name">uuid</stringProp>
            <stringProp name="Argument.value">${__time(,)}${__RandomString(21,qwertyuiopasdfghjklzxcvbnm1234567890,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">middlev2.datadeck.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="spaceId" elementType="Argument">
            <stringProp name="Argument.name">spaceId</stringProp>
            <stringProp name="Argument.value">a5dad8f3-2be6-4aa2-8d16-c4a106291225</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="panelId" elementType="Argument">
            <stringProp name="Argument.name">panelId</stringProp>
            <stringProp name="Argument.value">165c390b-8c28-4945-8eab-4f97c4e8fd3c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="firstpanelId" elementType="Argument">
            <stringProp name="Argument.name">firstpanelId</stringProp>
            <stringProp name="Argument.value">165c390b-8c28-4945-8eab-4f97c4e8fd3c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dsConnectionId" elementType="Argument">
            <stringProp name="Argument.name">dsConnectionId</stringProp>
            <stringProp name="Argument.value">6cedf21d-33d5-4ebb-b006-988a8536cb8c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="第三方接口可用性" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1497855685000</longProp>
        <longProp name="ThreadGroup.end_time">1497855685000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="case" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DD_JP.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,path,requestdata1,requestdata2,requestdata3,responsedata1,responsedata2,responsedata3,responsedata4</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/pt/users/signin?community=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.content.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1088026059">&quot;status&quot;:&quot;success&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestdata1}${requestdata2}${requestdata3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <hostname>true</hostname>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据源特殊性" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521085428000</longProp>
        <longProp name="ThreadGroup.end_time">1521085428000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_All.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,jsonpath,jsonpath1,flag,responsedata1,responsedata2,responsedata3,responsedata4,responsedata5,responsedata6,responsedata7,responsedata8,responsedata9,responsedata10,responsedata11,responsedata12,responsedata13,responsedata14,responsedata15,responsedata16,responsedata17,responsedata18,responsedata19,responsedata20,responsedata21,responsedata22,responsedata23,responsedata24,responsedata25,responsedata26</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
                <stringProp name="112071722">${responsedata5}</stringProp>
                <stringProp name="112071753">${responsedata6}</stringProp>
                <stringProp name="112071784">${responsedata7}</stringProp>
                <stringProp name="112071815">${responsedata8}</stringProp>
                <stringProp name="112071846">${responsedata9}</stringProp>
                <stringProp name="-820750020">${responsedata10}</stringProp>
                <stringProp name="-820749989">${responsedata11}</stringProp>
                <stringProp name="-820749958">${responsedata12}</stringProp>
                <stringProp name="-820749927">${responsedata13}</stringProp>
                <stringProp name="-820749896">${responsedata14}</stringProp>
                <stringProp name="-820749865">${responsedata15}</stringProp>
                <stringProp name="-820749834">${responsedata16}</stringProp>
                <stringProp name="-820749803">${responsedata17}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Predicate;
import net.minidev.json.JSONArray;

public class Test {    
    public static String readjson(String json, String jsonPath) {        
        try
        {
            Object value = JsonPath.read(json, jsonPath, new Predicate[0]);            
            if (value instanceof Integer)
             {
               return value.toString();
             }else if (value instanceof String)
             {
                   return value.toString();
             }else if (value instanceof Boolean)
             {
                   return value.toString();
            }else if (value instanceof JSONArray)
             {
                 JSONArray arr = (JSONArray)value;
                 if(!arr.isEmpty()){return arr.toJSONString();}                  
                 return &quot;&quot;;
            }else if (value instanceof LinkedHashMap)
             {
                  return value.toString();
             }else if (value instanceof float)
             {
                  return value.toString();
             }else{
                 return  value.toString();
             }
       }
       catch(Exception e){
           return &quot;pathnotfound&quot;;
       }        
   }    
}
//------------------------------------------------------------------------------------------------------------------
public static void fun(){
    String response_data=prev.getResponseDataAsString();//prev为JMeter预定义变量
    String JsonPath=&quot;${jsonpath1}&quot;;

    String result=Test.readjson(response_data,JsonPath);

	if(${flag}&gt;=2){
		String JsonPath1 = &quot;${jsonpath}&quot;;
    		String result1=Test.readjson(response_data,JsonPath1);
    		int resultToNum=Integer.parseInt(result1);
    		if(resultToNum!=${flag}&amp;&amp;resultToNum&lt;55){	
	    	    	Failure = true;
	    	    	FailureMessage = &quot;${name}长度检查不正确！\njosn长度:&quot;+result1+&quot;\n检查点：${flag}&quot;;
    		}else{
	    	   	for(int i=2;i&lt;${flag}+2;i++){	
			String responsedata = vars.get(&quot;responsedata&quot;+i);
//			log.info(&quot;***********${name}************&quot;+responsedata);
			     if(result.contains(responsedata)){
			    	    Failure = false;
			    	    FailureMessage = &quot;${name}检查正确！&quot;;
		//	    	    log.info(&quot;***********response************&quot;);
			     }else{
			    	    Failure = true;
			    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
			     }
			}
    		}
	}else if(${flag}==1){
		String responsedata = vars.get(&quot;responsedata2&quot;);
//		log.info(&quot;***********${name}************&quot;+responsedata);
		     if(result.equals(responsedata)){
		    	    Failure = false;
		    	    FailureMessage = &quot;${name}检查正确！&quot;;
	//	    	    log.info(&quot;***********response************&quot;);
		     }else{
		    	    Failure = true;
		    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
		     }	
	}else{
//		log.info(&quot;***********${name}************&quot;+result);
			if(result.contains(&quot;pathnotfound&quot;)){
		    	    Failure = false;
		    	    FailureMessage = &quot;${name}检查正确！&quot;;
//		    	    log.info(&quot;***********result************&quot;+result);
		     }else{
		    	    Failure = true;
		    	    FailureMessage = &quot;${name}检查不正确！\njosn：&quot;+result+&quot;\n检查点：&quot;+responsedata;
		     }	
	}
}
fun();</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters">${test1} ${test2}</stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="error" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="数据源特殊性_未来时间" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521085428000</longProp>
        <longProp name="ThreadGroup.end_time">1521085428000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_Future.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,resquest,responsedata1,responsedata2</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${resquest}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">gb2312</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="error" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="计算字段" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522753174000</longProp>
        <longProp name="ThreadGroup.end_time">1522753174000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;(`92f8e206-8450-4059-876a-10d83d5d3e67`+`6bcdef31-0482-48d0-bd6a-baed9217255a`)/2-`355b12fa-6152-45f3-b4dd-c2da5697746f`*2&quot;,&quot;formula&quot;:&quot;(`92f8e206-8450-4059-876a-10d83d5d3e67`+`6bcdef31-0482-48d0-bd6a-baed9217255a`)/2-`355b12fa-6152-45f3-b4dd-c2da5697746f`*2&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;92f8e206-8450-4059-876a-10d83d5d3e67&quot;},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;6bcdef31-0482-48d0-bd6a-baed9217255a&quot;},{&quot;id&quot;:&quot;ga:users&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1&quot;,&quot;name&quot;:&quot;Users&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;ga:users&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;355b12fa-6152-45f3-b4dd-c2da5697746f&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;3b232b6a-4b34-49ea-b2fc-702e39a7aee4&quot;,&quot;aggregator&quot;:&quot;(`Users`+`Users`)/2-`Users`*2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;3b232b6a-4b34-49ea-b2fc-702e39a7aee4&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;efe3197e-5a57-468a-a329-a849b3a28a29&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/04/09|2018/04/15&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;aecdb6f9-631c-4540-9b9e-0047a440f1d2&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-471703970">[-204004.00]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Analytics_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/a7148775-dab3-4bd9-bf30-dc9a1799e214/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Adwords_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;(`481e2be5-7743-4925-878f-a16992273620`+`aef19cb4-d72e-4799-99e2-5d308a0be712`)/3-`a48e1a60-4783-411e-ac0b-3f487deec993`*0&quot;,&quot;formula&quot;:&quot;(`481e2be5-7743-4925-878f-a16992273620`+`aef19cb4-d72e-4799-99e2-5d308a0be712`)/3-`a48e1a60-4783-411e-ac0b-3f487deec993`*0&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;Impressions&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;335&quot;,&quot;name&quot;:&quot;Impressions&quot;,&quot;dataType&quot;:&quot;LONG&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Impressions&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;481e2be5-7743-4925-878f-a16992273620&quot;},{&quot;id&quot;:&quot;AveragePosition&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;338&quot;,&quot;name&quot;:&quot;Avg. position&quot;,&quot;dataType&quot;:&quot;DOUBLE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;AveragePosition&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;aef19cb4-d72e-4799-99e2-5d308a0be712&quot;},{&quot;id&quot;:&quot;Impressions&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;335&quot;,&quot;name&quot;:&quot;Impressions&quot;,&quot;dataType&quot;:&quot;LONG&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Impressions&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a48e1a60-4783-411e-ac0b-3f487deec993&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;1cd29c9c-c551-42a1-9e4d-a7ffe1e2b7da&quot;,&quot;aggregator&quot;:&quot;(`Impressions`+`Avg. position`)/3-`Impressions`*0&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Adwords_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;1cd29c9c-c551-42a1-9e4d-a7ffe1e2b7da&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;c52cec82-0128-43e1-80b5-87acf1e18f0f&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2015/09/01|2015/09/30&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;c52cec82-0128-43e1-80b5-87acf1e18f0f&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="662504086">[3.00]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Adwords_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Adwords_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/1cd29c9c-c551-42a1-9e4d-a7ffe1e2b7da/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Facebook Ads_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;`1996d405-e5ec-4247-81a3-b7e3e5a0d7e6`/5-`0ab3b6b1-d3f2-4884-8b4d-4728c62f5370`*(1+2)&quot;,&quot;formula&quot;:&quot;`1996d405-e5ec-4247-81a3-b7e3e5a0d7e6`/5-`0ab3b6b1-d3f2-4884-8b4d-4728c62f5370`*(1+2)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;reach&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;700&quot;,&quot;name&quot;:&quot;Reach&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;reach&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1996d405-e5ec-4247-81a3-b7e3e5a0d7e6&quot;},{&quot;id&quot;:&quot;spend&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;703&quot;,&quot;name&quot;:&quot;Amount Spent&quot;,&quot;dataType&quot;:&quot;CURRENCY&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;spend&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;0ab3b6b1-d3f2-4884-8b4d-4728c62f5370&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;6707498f-7cb3-46f6-bcfe-2ea1504f9c79&quot;,&quot;aggregator&quot;:&quot;`Reach`/5-`Amount Spent`*(1+2)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Facebook Ads_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;6707498f-7cb3-46f6-bcfe-2ea1504f9c79&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;6d7453a1-93c6-418f-92cd-e3dde730b8f1&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2016/02/02|2016/02/29&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;57585d07-b7ad-4cc6-af78-ec0c95dc202c&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="2003552093">[-62.41]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Facebook Ads_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Facebook Ads_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/6707498f-7cb3-46f6-bcfe-2ea1504f9c79/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ptengine_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;(`565dfacb-4f7f-4825-a151-4d711511a3b4`+`db0474f9-1dc5-477b-9472-c75afd67819a`)/2-`d5814783-799a-42ad-8f0e-1eaef7d6e8a2`*2&quot;,&quot;formula&quot;:&quot;(`565dfacb-4f7f-4825-a151-4d711511a3b4`+`db0474f9-1dc5-477b-9472-c75afd67819a`)/2-`d5814783-799a-42ad-8f0e-1eaef7d6e8a2`*2&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;pt:sessions&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;503&quot;,&quot;name&quot;:&quot;Visits&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;pt:sessions&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;565dfacb-4f7f-4825-a151-4d711511a3b4&quot;},{&quot;id&quot;:&quot;pt:newUsers&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;502&quot;,&quot;name&quot;:&quot;New Visits&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;pt:newUsers&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;db0474f9-1dc5-477b-9472-c75afd67819a&quot;},{&quot;id&quot;:&quot;pt:newUsers&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;502&quot;,&quot;name&quot;:&quot;New Visits&quot;,&quot;dataType&quot;:&quot;INTEGER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:null,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;pt:newUsers&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;d5814783-799a-42ad-8f0e-1eaef7d6e8a2&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;0fae96ee-e199-4727-8edb-a083e9ac4028&quot;,&quot;aggregator&quot;:&quot;(`Visits`+`New Visits`)/2-`New Visits`*2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ptengine_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;87310c76-5dd1-4318-8e0d-c11ed8828bd0&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;a3a555bb-0308-48f5-b8c5-0abbbe1bbfbd&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2018/02/01|2018/02/07&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;a3a555bb-0308-48f5-b8c5-0abbbe1bbfbd&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:null},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1397612115">[78.50]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ptengine_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ptengine_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/0fae96ee-e199-4727-8edb-a083e9ac4028/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="YAHOO! Ads SS_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;`259d4eff-4493-4289-83f7-b31d2236d4c6`-(`8b159344-5e55-4110-a1b5-a45f5e718ee8`/5+`f0c13306-aa72-4d7e-96fd-ce71a1d1323a`*10)&quot;,&quot;formula&quot;:&quot;`259d4eff-4493-4289-83f7-b31d2236d4c6`-(`8b159344-5e55-4110-a1b5-a45f5e718ee8`/5+`f0c13306-aa72-4d7e-96fd-ce71a1d1323a`*10)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;COST&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6000&quot;,&quot;name&quot;:&quot;Cost&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;COST&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;259d4eff-4493-4289-83f7-b31d2236d4c6&quot;},{&quot;id&quot;:&quot;IMPS&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6001&quot;,&quot;name&quot;:&quot;Impressions&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;IMPS&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;8b159344-5e55-4110-a1b5-a45f5e718ee8&quot;},{&quot;id&quot;:&quot;CLICKS&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6002&quot;,&quot;name&quot;:&quot;Clicks&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;CLICKS&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;f0c13306-aa72-4d7e-96fd-ce71a1d1323a&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;759b7409-bf68-4275-8486-d1bf98895414&quot;,&quot;aggregator&quot;:&quot;`Cost`-(`Impressions`/5+`Clicks`*10)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="YAHOO! Ads SS_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;759b7409-bf68-4275-8486-d1bf98895414&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;f750bcc2-f0c2-485a-84ab-8ec19103e90c&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:null,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:false,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2016/10/01|2016/10/31&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;2b0af45d-7878-49a3-87b9-65899180bb96&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-2021748181">[925.20]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="YAHOO! Ads SS_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="YAHOO! Ads SS_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/759b7409-bf68-4275-8486-d1bf98895414/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MailChimp_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`1619f1aa-1476-497b-9ef7-8243ca2964ae`)+AVG(`056a0e13-01b5-48bd-a883-d560a1144e77`)-(MAX(`ceddaeb5-7e33-442c-85b6-2bea74f43d51`)-MIN(`92475b19-f37a-465d-8c55-419cde5ed41d`)*2)-(COUNTA(`906578a5-283e-474e-8858-3c97af006825`)+D_COUNT(`4e966a66-6f20-4fa0-ac1c-040d74e66437`))/2&quot;,&quot;formula&quot;:&quot;SUM(`1619f1aa-1476-497b-9ef7-8243ca2964ae`)+AVG(`056a0e13-01b5-48bd-a883-d560a1144e77`)-(MAX(`ceddaeb5-7e33-442c-85b6-2bea74f43d51`)-MIN(`92475b19-f37a-465d-8c55-419cde5ed41d`)*2)-(COUNTA(`906578a5-283e-474e-8858-3c97af006825`)+D_COUNT(`4e966a66-6f20-4fa0-ac1c-040d74e66437`))/2&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;report_summary.subscriber_clicks&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2611&quot;,&quot;name&quot;:&quot;Clicked&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;report_summary.subscriber_clicks&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1619f1aa-1476-497b-9ef7-8243ca2964ae&quot;},{&quot;id&quot;:&quot;report_summary.subscriber_clicks&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2611&quot;,&quot;name&quot;:&quot;Clicked&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;report_summary.subscriber_clicks&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;056a0e13-01b5-48bd-a883-d560a1144e77&quot;},{&quot;id&quot;:&quot;report_summary.unique_opens&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2610&quot;,&quot;name&quot;:&quot;Opened&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;report_summary.unique_opens&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;ceddaeb5-7e33-442c-85b6-2bea74f43d51&quot;},{&quot;id&quot;:&quot;report_summary.unique_opens&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2610&quot;,&quot;name&quot;:&quot;Opened&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;report_summary.unique_opens&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;92475b19-f37a-465d-8c55-419cde5ed41d&quot;},{&quot;id&quot;:&quot;status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2603&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;906578a5-283e-474e-8858-3c97af006825&quot;},{&quot;id&quot;:&quot;create_time&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2602&quot;,&quot;name&quot;:&quot;Create Time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;create_time&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;4e966a66-6f20-4fa0-ac1c-040d74e66437&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;c1ffb615-11a9-4ffe-a15f-b416ff15fa5c&quot;,&quot;aggregator&quot;:&quot;SUM(`Clicked`)+AVG(`Clicked`)-(MAX(`Opened`)-MIN(`Opened`)*2)-(COUNTA(`Status`)+D_COUNT(`Create Time`))/2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MailChimp_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;27a0443f-da5e-477c-8e30-7b20149fe1f1&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;e5812f92-b68a-43f1-8d67-12588ea0d83b&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;fieldId&quot;:&quot;2602&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;id&quot;:&quot;create_time&quot;,&quot;extra&quot;:{&quot;type&quot;:&quot;metrics&quot;,&quot;allowFilter&quot;:1,&quot;code&quot;:&quot;create_time&quot;},&quot;name&quot;:&quot;Create time&quot;},&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2014/12/31|2018/01/01&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;e5812f92-b68a-43f1-8d67-12588ea0d83b&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:null},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-586644049">[-222.56]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MailChimp_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MailChimp_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/c1ffb615-11a9-4ffe-a15f-b416ff15fa5c/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="stripe_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`de0eb443-783e-4b3e-953b-1fd1587c6d78`)+AVG(`1176ebc1-f940-4b3d-8f8f-b18d7e1a8462`)-(MAX(`5b17a847-57d0-425c-9a16-bd2a6dd81282`)+MIN(`1a931587-bcc3-44ac-85a1-9c94e4ac6f31`))*3+COUNTA(`b05267dd-cad6-4de2-89dc-31560abdd4f6`)+D_COUNT(`1bd0860c-d5d8-4047-847f-79804ecd44dd`)/2&quot;,&quot;formula&quot;:&quot;SUM(`de0eb443-783e-4b3e-953b-1fd1587c6d78`)+AVG(`1176ebc1-f940-4b3d-8f8f-b18d7e1a8462`)-(MAX(`5b17a847-57d0-425c-9a16-bd2a6dd81282`)+MIN(`1a931587-bcc3-44ac-85a1-9c94e4ac6f31`))*3+COUNTA(`b05267dd-cad6-4de2-89dc-31560abdd4f6`)+D_COUNT(`1bd0860c-d5d8-4047-847f-79804ecd44dd`)/2&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;balanceAmount&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2301&quot;,&quot;name&quot;:&quot;Amount&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;balanceAmount&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;de0eb443-783e-4b3e-953b-1fd1587c6d78&quot;},{&quot;id&quot;:&quot;balanceFee&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2305&quot;,&quot;name&quot;:&quot;Fee&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;balanceFee&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1176ebc1-f940-4b3d-8f8f-b18d7e1a8462&quot;},{&quot;id&quot;:&quot;balanceNet&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2311&quot;,&quot;name&quot;:&quot;Net&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;balanceNet&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;5b17a847-57d0-425c-9a16-bd2a6dd81282&quot;},{&quot;id&quot;:&quot;balanceFee&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2305&quot;,&quot;name&quot;:&quot;Fee&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;balanceFee&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1a931587-bcc3-44ac-85a1-9c94e4ac6f31&quot;},{&quot;id&quot;:&quot;currency&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2304&quot;,&quot;name&quot;:&quot;Currency&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;currency&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;b05267dd-cad6-4de2-89dc-31560abdd4f6&quot;},{&quot;id&quot;:&quot;balanceCreated&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;2303&quot;,&quot;name&quot;:&quot;Created&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;balanceCreated&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1bd0860c-d5d8-4047-847f-79804ecd44dd&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;ae690096-5d1c-4fd1-a7a9-61618eda3b8d&quot;,&quot;aggregator&quot;:&quot;SUM(`Amount`)+AVG(`Fee`)-(MAX(`Net`)+MIN(`Fee`))*3+COUNTA(`Currency`)+D_COUNT(`Created`)/2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="stripe_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;ae690096-5d1c-4fd1-a7a9-61618eda3b8d&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;45ac1706-e432-4032-a1b5-62ff616fb662&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:null,&quot;code&quot;:&quot;past&quot;,&quot;value&quot;:&quot;999&quot;,&quot;isIncludeToday&quot;:false},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;9eea17ea-62eb-4eb3-a982-5507a161bb69&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="1610079748">[-4370.66]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="stripe_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="stripe_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/ae690096-5d1c-4fd1-a7a9-61618eda3b8d/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Excel/CSV_计算字段_创建" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`db5e49aa-689d-4077-838c-7051d00e7f61`)+AVG(`d37484cf-8247-4d47-ac93-ffd2a50dc358`)-(MAX(`63f94c0f-221f-408e-89b5-e05cdbd0b8d7`)+MIN(`75937764-9054-4f38-9bef-c6b2a0c08b06`))*2-(COUNTA(`e1e438f2-2107-4c40-9e7d-14de6fa1d260`)+D_COUNT(`84a9375a-0ac0-4071-81b6-2a7f184ee053`))/2&quot;,&quot;formula&quot;:&quot;SUM(`db5e49aa-689d-4077-838c-7051d00e7f61`)+AVG(`d37484cf-8247-4d47-ac93-ffd2a50dc358`)-(MAX(`63f94c0f-221f-408e-89b5-e05cdbd0b8d7`)+MIN(`75937764-9054-4f38-9bef-c6b2a0c08b06`))*2-(COUNTA(`e1e438f2-2107-4c40-9e7d-14de6fa1d260`)+D_COUNT(`84a9375a-0ac0-4071-81b6-2a7f184ee053`))/2&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;name&quot;:&quot;number&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;db5e49aa-689d-4077-838c-7051d00e7f61&quot;},{&quot;id&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;name&quot;:&quot;number&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;d37484cf-8247-4d47-ac93-ffd2a50dc358&quot;},{&quot;id&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;name&quot;:&quot;number&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;63f94c0f-221f-408e-89b5-e05cdbd0b8d7&quot;},{&quot;id&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;name&quot;:&quot;number&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;75937764-9054-4f38-9bef-c6b2a0c08b06&quot;},{&quot;id&quot;:&quot;3e83392d-8147-40aa-b377-0993b3b06acc&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;3e83392d-8147-40aa-b377-0993b3b06acc&quot;,&quot;name&quot;:&quot;id&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;3e83392d-8147-40aa-b377-0993b3b06acc&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;e1e438f2-2107-4c40-9e7d-14de6fa1d260&quot;},{&quot;id&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;name&quot;:&quot;number&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;e4553607-3a4f-4911-9e31-1fc42692a2e3&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;84a9375a-0ac0-4071-81b6-2a7f184ee053&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;708552d3-d5a4-4788-b0ef-9f6945f34f18&quot;,&quot;aggregator&quot;:&quot;SUM(`number`)+AVG(`number`)-(MAX(`number`)+MIN(`number`))*2-(COUNTA(`id`)+D_COUNT(`number`))/2&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Excel/CSV_计算字段_数据正确性检查" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;98d6e79a-a445-4e56-ab33-df0ec4671ccc&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;1384f3b8-5d3e-48b0-8018-f5913db79fb7&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;595f6577-6f8f-4830-8c89-911659804cb4&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;595f6577-6f8f-4830-8c89-911659804cb4&quot;,&quot;name&quot;:&quot;date&quot;,&quot;dataType&quot;:&quot;DATE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;MM/dd/yyyy&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;595f6577-6f8f-4830-8c89-911659804cb4&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1597510899">[26.20]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Excel/CSV_计算字段_删除" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Excel/CSV_计算字段_数量检查" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/98d6e79a-a445-4e56-ab33-df0ec4671ccc/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Driver_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`a75aea41-6c73-4e49-a198-5d99cb8be4d1`)+AVG(`df23da1a-dd26-4460-93f4-32cbf976df71`)-(MAX(`7dd54c73-d784-4c9b-8adf-15dd72af3f1e`)/2+MIN(`f7f7cc02-bb8a-474d-95ec-8cf39b0a0e3f`)*5)+COUNTA(`531c332f-6867-4b28-86d3-744f43f05c1c`)-D_COUNT(`1c6aef62-f40e-42a5-860b-3f39dc6e873f`)&quot;,&quot;formula&quot;:&quot;SUM(`a75aea41-6c73-4e49-a198-5d99cb8be4d1`)+AVG(`df23da1a-dd26-4460-93f4-32cbf976df71`)-(MAX(`7dd54c73-d784-4c9b-8adf-15dd72af3f1e`)/2+MIN(`f7f7cc02-bb8a-474d-95ec-8cf39b0a0e3f`)*5)+COUNTA(`531c332f-6867-4b28-86d3-744f43f05c1c`)-D_COUNT(`1c6aef62-f40e-42a5-860b-3f39dc6e873f`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a75aea41-6c73-4e49-a198-5d99cb8be4d1&quot;},{&quot;id&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;df23da1a-dd26-4460-93f4-32cbf976df71&quot;},{&quot;id&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b2196aaf-5449-48f7-81e1-3fcbc0c79aa2&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;7dd54c73-d784-4c9b-8adf-15dd72af3f1e&quot;},{&quot;id&quot;:&quot;fd55138f-cb23-4fb4-8d22-9ec294086b7f&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;fd55138f-cb23-4fb4-8d22-9ec294086b7f&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;fd55138f-cb23-4fb4-8d22-9ec294086b7f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;f7f7cc02-bb8a-474d-95ec-8cf39b0a0e3f&quot;},{&quot;id&quot;:&quot;0e0bd44e-fa34-4ab6-b28e-ded393d6991b&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;0e0bd44e-fa34-4ab6-b28e-ded393d6991b&quot;,&quot;name&quot;:&quot;Activite_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;0e0bd44e-fa34-4ab6-b28e-ded393d6991b&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;531c332f-6867-4b28-86d3-744f43f05c1c&quot;},{&quot;id&quot;:&quot;afb44faa-a597-40c6-a54e-a595951c65c1&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;afb44faa-a597-40c6-a54e-a595951c65c1&quot;,&quot;name&quot;:&quot;User_Name&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;afb44faa-a597-40c6-a54e-a595951c65c1&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1c6aef62-f40e-42a5-860b-3f39dc6e873f&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;42536a7d-3f23-483c-9941-e553093da680&quot;,&quot;aggregator&quot;:&quot;SUM(`Status`)+AVG(`Status`)-(MAX(`Status`)/2+MIN(`Login_Active`)*5)+COUNTA(`Activite_Date`)-D_COUNT(`User_Name`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Driver_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;42536a7d-3f23-483c-9941-e553093da680&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;05bdc9f3-6de1-43dd-9e71-25f4d30625c4&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;e582871f-1de5-4176-b63c-71d25b1b15e6&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e582871f-1de5-4176-b63c-71d25b1b15e6&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;e582871f-1de5-4176-b63c-71d25b1b15e6&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;9ce00ea0-93a7-49a6-8528-cd67a83e7cfb&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="345159023">[1976.03]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Driver_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google Driver_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/42536a7d-3f23-483c-9941-e553093da680/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google BigQuery_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;e8c0181a-97d5-4142-8df5-cf9995df5daf&quot;,&quot;code&quot;:null,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`14138a40-5e39-4dda-b5d4-61ccbd0e8748`)-(AVG(`f2847ff0-5a0e-4501-9681-319d3c4e768a`)+MAX(`3a737adc-9c35-45eb-85d0-98ec904fdd4b`)/10)+MIN(`454ea747-8bea-49ac-863c-a962026132b5`)*2+COUNTA(`1a52e810-69bf-4604-a7bf-8df1c63ad559`)-D_COUNT(`0fcdb3dc-4a6d-4768-9424-325bf4f08218`)&quot;,&quot;formula&quot;:&quot;SUM(`14138a40-5e39-4dda-b5d4-61ccbd0e8748`)-(AVG(`f2847ff0-5a0e-4501-9681-319d3c4e768a`)+MAX(`3a737adc-9c35-45eb-85d0-98ec904fdd4b`)/10)+MIN(`454ea747-8bea-49ac-863c-a962026132b5`)*2+COUNTA(`1a52e810-69bf-4604-a7bf-8df1c63ad559`)-D_COUNT(`0fcdb3dc-4a6d-4768-9424-325bf4f08218`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;id&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;681bd1ad-97b5-43db-8e35-a51a3c22c744&quot;,&quot;name&quot;:&quot;id&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;id&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;INTEGER&quot;,&quot;formulaId&quot;:&quot;14138a40-5e39-4dda-b5d4-61ccbd0e8748&quot;},{&quot;id&quot;:&quot;parent&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;f7824159-edaa-46e7-bd65-eed274430d75&quot;,&quot;name&quot;:&quot;parent&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;parent&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;INTEGER&quot;,&quot;formulaId&quot;:&quot;f2847ff0-5a0e-4501-9681-319d3c4e768a&quot;},{&quot;id&quot;:&quot;id&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;681bd1ad-97b5-43db-8e35-a51a3c22c744&quot;,&quot;name&quot;:&quot;id&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;id&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;INTEGER&quot;,&quot;formulaId&quot;:&quot;3a737adc-9c35-45eb-85d0-98ec904fdd4b&quot;},{&quot;id&quot;:&quot;parent&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;f7824159-edaa-46e7-bd65-eed274430d75&quot;,&quot;name&quot;:&quot;parent&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;parent&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;INTEGER&quot;,&quot;formulaId&quot;:&quot;454ea747-8bea-49ac-863c-a962026132b5&quot;},{&quot;id&quot;:&quot;time_ts&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6e533c64-7a57-4b84-a81a-f4f97f28a710&quot;,&quot;name&quot;:&quot;time_ts&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;time_ts&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;TIMESTAMP&quot;,&quot;formulaId&quot;:&quot;1a52e810-69bf-4604-a7bf-8df1c63ad559&quot;},{&quot;id&quot;:&quot;text&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;dfe1478e-c423-43c4-bd0a-ec032812529a&quot;,&quot;name&quot;:&quot;text&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;text&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;STRING&quot;,&quot;formulaId&quot;:&quot;0fcdb3dc-4a6d-4768-9424-325bf4f08218&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;463829ef-1e74-4bf3-9861-5613679c6b59&quot;,&quot;aggregator&quot;:&quot;SUM(`id`)-(AVG(`parent`)+MAX(`id`)/10)+MIN(`parent`)*2+COUNTA(`time_ts`)-D_COUNT(`text`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google BigQuery_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;6af7a4c2-77bb-4ca1-9bc6-a06662667369&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;26f30d2f-c4c2-4789-8ad7-4baecc36ce43&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;time_ts&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6e533c64-7a57-4b84-a81a-f4f97f28a710&quot;,&quot;name&quot;:&quot;time_ts&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;time_ts&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;TIMESTAMP&quot;},&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2015/01/01|2016/02/03&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;26f30d2f-c4c2-4789-8ad7-4baecc36ce43&quot;},&quot;maxLimit&quot;:{&quot;rows&quot;:null},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null,&quot;widgetTemplateConfig&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1598913730">[26298817.40]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google BigQuery_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Google BigQuery_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/463829ef-1e74-4bf3-9861-5613679c6b59/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon Redshift_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`6f9f3250-7019-4ea0-bd69-be4e7ba07569`)-(AVG(`4fa7ae06-e307-4ba4-83f6-767b17b8991f`)*10+MAX(`6247e23c-5f12-47a7-8db2-8ab2a737f3a0`)/2)+MIN(`2e2f921d-f4ae-469d-9e3c-72eaf24b4ca3`)+COUNTA(`1b1236ed-0dbf-40ed-8dd5-acc619289d5c`)-D_COUNT(`6d0fcaf2-6e5f-4ac1-8627-3ab2604aa0f6`)&quot;,&quot;formula&quot;:&quot;SUM(`6f9f3250-7019-4ea0-bd69-be4e7ba07569`)-(AVG(`4fa7ae06-e307-4ba4-83f6-767b17b8991f`)*10+MAX(`6247e23c-5f12-47a7-8db2-8ab2a737f3a0`)/2)+MIN(`2e2f921d-f4ae-469d-9e3c-72eaf24b4ca3`)+COUNTA(`1b1236ed-0dbf-40ed-8dd5-acc619289d5c`)-D_COUNT(`6d0fcaf2-6e5f-4ac1-8627-3ab2604aa0f6`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;30dc5537-b158-45a5-92a2-d68e1c7b700a&quot;,&quot;name&quot;:&quot;status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;6f9f3250-7019-4ea0-bd69-be4e7ba07569&quot;},{&quot;id&quot;:&quot;buer&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;3801f2eb-7e47-4a09-bdfc-d640a563aab5&quot;,&quot;name&quot;:&quot;buer&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;buer&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;4fa7ae06-e307-4ba4-83f6-767b17b8991f&quot;},{&quot;id&quot;:&quot;status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;30dc5537-b158-45a5-92a2-d68e1c7b700a&quot;,&quot;name&quot;:&quot;status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;6247e23c-5f12-47a7-8db2-8ab2a737f3a0&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;c7c0a478-08e8-480a-aed1-a484594478a7&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;2e2f921d-f4ae-469d-9e3c-72eaf24b4ca3&quot;},{&quot;id&quot;:&quot;activite_date&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1aecfdaa-6c56-40b9-817a-df0227ba3fe7&quot;,&quot;name&quot;:&quot;activite_date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;activite_date&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;1b1236ed-0dbf-40ed-8dd5-acc619289d5c&quot;},{&quot;id&quot;:&quot;time_v&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;73020f42-1336-4ae0-8854-65751e455457&quot;,&quot;name&quot;:&quot;time_v&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;time_v&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;6d0fcaf2-6e5f-4ac1-8627-3ab2604aa0f6&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;274cb0a9-51b0-457a-b41c-2202b5a912c0&quot;,&quot;aggregator&quot;:&quot;SUM(`status`)-(AVG(`buer`)*10+MAX(`status`)/2)+MIN(`login_count`)+COUNTA(`activite_date`)-D_COUNT(`time_v`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon Redshift_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;274cb0a9-51b0-457a-b41c-2202b5a912c0&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;dc2ea150-0b08-4894-86ee-ac7f69aa251a&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;create_date&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;469c5a67-8f48-43d5-b1d9-ef875c2689a5&quot;,&quot;name&quot;:&quot;create_date&quot;,&quot;dataType&quot;:&quot;DATE&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;create_date&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;bff2260e-17da-4ee1-8bef-227a257f5100&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-709914001">[36.54]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon Redshift_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon Redshift_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/274cb0a9-51b0-457a-b41c-2202b5a912c0/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MySQL_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`753944bf-9619-417e-81fb-afbe9b5bd98d`)-(AVG(`e7abaf9a-a25b-44b3-854d-eafb8fe6506e`)/5+MIN(`06c40d1f-7000-4d5f-860c-0d50c5353413`))+MAX(`fcdcf224-838e-4016-8ddc-4dfd6a5361a9`)*2-COUNTA(`2e0f08bf-59d8-4475-950b-d6a8a66c7939`)-D_COUNT(`8b5701ad-b13b-4cdc-9c3b-c270a6cc85b6`)&quot;,&quot;formula&quot;:&quot;SUM(`753944bf-9619-417e-81fb-afbe9b5bd98d`)-(AVG(`e7abaf9a-a25b-44b3-854d-eafb8fe6506e`)/5+MIN(`06c40d1f-7000-4d5f-860c-0d50c5353413`))+MAX(`fcdcf224-838e-4016-8ddc-4dfd6a5361a9`)*2-COUNTA(`2e0f08bf-59d8-4475-950b-d6a8a66c7939`)-D_COUNT(`8b5701ad-b13b-4cdc-9c3b-c270a6cc85b6`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;share_url&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b972d760-ae33-4a00-976d-1c8f5fb21196&quot;,&quot;name&quot;:&quot;share_url&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;share_url&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;753944bf-9619-417e-81fb-afbe9b5bd98d&quot;},{&quot;id&quot;:&quot;panel_status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;f714071b-5a5f-4cef-85a3-a665a79d8f13&quot;,&quot;name&quot;:&quot;panel_status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;panel_status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;e7abaf9a-a25b-44b3-854d-eafb8fe6506e&quot;},{&quot;id&quot;:&quot;panel_status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;f714071b-5a5f-4cef-85a3-a665a79d8f13&quot;,&quot;name&quot;:&quot;panel_status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;panel_status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;06c40d1f-7000-4d5f-860c-0d50c5353413&quot;},{&quot;id&quot;:&quot;share_url&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b972d760-ae33-4a00-976d-1c8f5fb21196&quot;,&quot;name&quot;:&quot;share_url&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;share_url&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;fcdcf224-838e-4016-8ddc-4dfd6a5361a9&quot;},{&quot;id&quot;:&quot;user_email&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e7fa6ae6-afb0-4ab5-b5c9-d8d6c3f6f5f2&quot;,&quot;name&quot;:&quot;user_email&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;user_email&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;2e0f08bf-59d8-4475-950b-d6a8a66c7939&quot;},{&quot;id&quot;:&quot;panel_title&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;98739d9c-adcb-473d-bb6a-e81ba2e2f2b0&quot;,&quot;name&quot;:&quot;panel_title&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy年MM月dd日&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;panel_title&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;8b5701ad-b13b-4cdc-9c3b-c270a6cc85b6&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;2a837bd8-da9d-41d3-832d-7fca16004371&quot;,&quot;aggregator&quot;:&quot;SUM(`share_url`)-(AVG(`panel_status`)/5+MIN(`panel_status`))+MAX(`share_url`)*2-COUNTA(`user_email`)-D_COUNT(`panel_title`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MySQL_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;9fa1222d-4164-4edd-802a-c101787d024f&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;2f61d385-8e59-4809-8ced-39119e7677db&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;update_time&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;ab8582e6-f005-4448-9226-65401dba50c1&quot;,&quot;name&quot;:&quot;update_time&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;update_time&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;custom&quot;,&quot;value&quot;:&quot;2017/09/01|2017/09/30&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;2f61d385-8e59-4809-8ced-39119e7677db&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="419335490">[-19086.08]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MySQL_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MySQL_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/2a837bd8-da9d-41d3-832d-7fca16004371/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for MySQL_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;2f707997-ba7b-4470-9ede-d2aca60cc897&quot;,&quot;code&quot;:null,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`a66908ff-8307-402e-82d8-802e2e289754`)-(AVG(`04bda8b1-496b-495c-8396-cd264105b049`)/4-MAX(`a772abae-4aa0-4c01-9f9d-e04a35fba5f3`))+MIN(`174488e0-6b79-4bdc-97b1-24c6caf64628`)*3+D_COUNT(`33603938-93f2-4f8e-8b9b-2b095c7acf27`)-COUNTA(`c625ec78-0955-460b-8010-a11ad3e0b5dd`)&quot;,&quot;formula&quot;:&quot;SUM(`a66908ff-8307-402e-82d8-802e2e289754`)-(AVG(`04bda8b1-496b-495c-8396-cd264105b049`)/4-MAX(`a772abae-4aa0-4c01-9f9d-e04a35fba5f3`))+MIN(`174488e0-6b79-4bdc-97b1-24c6caf64628`)*3+D_COUNT(`33603938-93f2-4f8e-8b9b-2b095c7acf27`)-COUNTA(`c625ec78-0955-460b-8010-a11ad3e0b5dd`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;44491100-3176-42de-a49b-d0e4ffa9bee6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a66908ff-8307-402e-82d8-802e2e289754&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;543398fd-54a8-40fd-a9e1-055c14e18c3c&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;04bda8b1-496b-495c-8396-cd264105b049&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;543398fd-54a8-40fd-a9e1-055c14e18c3c&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a772abae-4aa0-4c01-9f9d-e04a35fba5f3&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;44491100-3176-42de-a49b-d0e4ffa9bee6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;174488e0-6b79-4bdc-97b1-24c6caf64628&quot;},{&quot;id&quot;:&quot;Pt_ID&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e1a7ed2b-7d37-4a58-b117-3220b3a0338b&quot;,&quot;name&quot;:&quot;Pt_ID&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Pt_ID&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;33603938-93f2-4f8e-8b9b-2b095c7acf27&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;543398fd-54a8-40fd-a9e1-055c14e18c3c&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;c625ec78-0955-460b-8010-a11ad3e0b5dd&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;2245904b-542b-4898-a405-8e44afe4e1e1&quot;,&quot;aggregator&quot;:&quot;SUM(`Login_Active`)-(AVG(`login_count`)/4-MAX(`login_count`))+MIN(`Login_Active`)*3+D_COUNT(`Pt_ID`)-COUNTA(`login_count`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for MySQL_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;2245904b-542b-4898-a405-8e44afe4e1e1&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;26b41073-3877-4a8f-892a-716343371155&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;Create_Date&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;798613f5-bcdd-433b-b860-7d5aa8ffb551&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Create_Date&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;8fdad9f6-5adb-4d51-9427-250e8affbb2b&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1818309390">[896.42]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for MySQL_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for MySQL_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/2245904b-542b-4898-a405-8e44afe4e1e1/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for Aurora_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`a195ace5-4d18-4ff6-8c12-7f37dc990f37`)+AVG(`28f0c683-05f7-4bcd-81cd-3f42199a4137`)-(MAX(`10cd1968-2581-4553-8baf-92d68e2af8f5`)/3-MIN(`a3a048c3-b3d4-418f-836d-0c840a5b7f58`)*2)+COUNTA(`37b11458-1571-4dcb-84b2-50f48dc523f2`)-D_COUNT(`569b1837-242e-4371-b7af-5d942d72ad0d`)&quot;,&quot;formula&quot;:&quot;SUM(`a195ace5-4d18-4ff6-8c12-7f37dc990f37`)+AVG(`28f0c683-05f7-4bcd-81cd-3f42199a4137`)-(MAX(`10cd1968-2581-4553-8baf-92d68e2af8f5`)/3-MIN(`a3a048c3-b3d4-418f-836d-0c840a5b7f58`)*2)+COUNTA(`37b11458-1571-4dcb-84b2-50f48dc523f2`)-D_COUNT(`569b1837-242e-4371-b7af-5d942d72ad0d`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e9769a32-725d-4e41-a420-f1236f4ca74b&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a195ace5-4d18-4ff6-8c12-7f37dc990f37&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;9ea49235-bd04-4732-a6e2-34a9e2759088&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;28f0c683-05f7-4bcd-81cd-3f42199a4137&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;9ea49235-bd04-4732-a6e2-34a9e2759088&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;10cd1968-2581-4553-8baf-92d68e2af8f5&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e9769a32-725d-4e41-a420-f1236f4ca74b&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a3a048c3-b3d4-418f-836d-0c840a5b7f58&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;e9769a32-725d-4e41-a420-f1236f4ca74b&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;37b11458-1571-4dcb-84b2-50f48dc523f2&quot;},{&quot;id&quot;:&quot;login_count&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;9ea49235-bd04-4732-a6e2-34a9e2759088&quot;,&quot;name&quot;:&quot;login_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;login_count&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;569b1837-242e-4371-b7af-5d942d72ad0d&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;524c4106-1c8e-48de-8df9-3e2a7edf5b52&quot;,&quot;aggregator&quot;:&quot;SUM(`Login_Active`)+AVG(`login_count`)-(MAX(`login_count`)/3-MIN(`Login_Active`)*2)+COUNTA(`Login_Active`)-D_COUNT(`login_count`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for Aurora_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;524c4106-1c8e-48de-8df9-3e2a7edf5b52&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;aadce1ae-3b10-489a-83c6-ffee6ec47a0e&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;Create_Date&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;ce281485-000d-4bfe-8590-e5308a7f2315&quot;,&quot;name&quot;:&quot;Create_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Create_Date&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;a094dd39-ae6c-4ca2-9291-a4cda4920e4a&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1857152903">[2052.34]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for Aurora_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon RDS for Aurora_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/524c4106-1c8e-48de-8df9-3e2a7edf5b52/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SQL Server_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`250dd00f-869b-413c-8c5b-a2523690a7ab`)-AVG(`296e1415-a6c8-4cbe-8bea-884ab1d6a876`)*11-(MAX(`4293320c-392c-4d60-86f0-bd91e3ac7ab2`)/3-MIN(`2f418a5c-2c4d-4d2d-83a6-0136262168a2`))+COUNTA(`8540458e-ceed-43f1-8b62-931716bb49d5`)-D_COUNT(`44d42cd0-7e04-4ea2-85e7-f6451ffe0dd9`)&quot;,&quot;formula&quot;:&quot;SUM(`250dd00f-869b-413c-8c5b-a2523690a7ab`)-AVG(`296e1415-a6c8-4cbe-8bea-884ab1d6a876`)*11-(MAX(`4293320c-392c-4d60-86f0-bd91e3ac7ab2`)/3-MIN(`2f418a5c-2c4d-4d2d-83a6-0136262168a2`))+COUNTA(`8540458e-ceed-43f1-8b62-931716bb49d5`)-D_COUNT(`44d42cd0-7e04-4ea2-85e7-f6451ffe0dd9`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;Status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;199dfff7-0aef-41a9-9033-eb70c5d9a2a0&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;250dd00f-869b-413c-8c5b-a2523690a7ab&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;bb111168-8863-4611-a1ed-f2322c3a53c0&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;296e1415-a6c8-4cbe-8bea-884ab1d6a876&quot;},{&quot;id&quot;:&quot;Status&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;199dfff7-0aef-41a9-9033-eb70c5d9a2a0&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;4293320c-392c-4d60-86f0-bd91e3ac7ab2&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;bb111168-8863-4611-a1ed-f2322c3a53c0&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;2f418a5c-2c4d-4d2d-83a6-0136262168a2&quot;},{&quot;id&quot;:&quot;name&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;a0199df5-4ac8-474f-87a0-80093168f5e8&quot;,&quot;name&quot;:&quot;name&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;name&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;8540458e-ceed-43f1-8b62-931716bb49d5&quot;},{&quot;id&quot;:&quot;phone_country&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;1cb3d144-a3af-4674-8e50-8f6eca871b72&quot;,&quot;name&quot;:&quot;phone_country&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;phone_country&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;44d42cd0-7e04-4ea2-85e7-f6451ffe0dd9&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;54215e90-bd47-445f-ac06-028984fb8caa&quot;,&quot;aggregator&quot;:&quot;SUM(`Status`)-AVG(`Login_Active`)*11-(MAX(`Status`)/3-MIN(`Login_Active`))+COUNTA(`name`)-D_COUNT(`phone_country`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SQL Server_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;54215e90-bd47-445f-ac06-028984fb8caa&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;e2e60d58-5c60-452f-853d-e1c4d405a546&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;Activite_Date&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;45aea6e9-948a-474d-ba92-136461576ed2&quot;,&quot;name&quot;:&quot;Activite_Date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy/MM/dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Activite_Date&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;52675759-e1cb-45f2-b990-1f5089b7258e&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-1403530155">[1299.58]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SQL Server_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SQL Server_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/54215e90-bd47-445f-ac06-028984fb8caa/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`c877ff1e-5e77-4108-a37a-79f1d5b37574`)-(AVG(`e1bcc301-ecd0-4cab-a2ca-809b4117bacf`)*2-MAX(`91f3c9d6-09b2-4346-8a37-859deb6123ec`)/3)-MIN(`a66ccab4-532e-40a7-8750-d581ad9991d1`)+COUNTA(`9a6dda9b-1520-401b-8966-dcf001b0e0c5`)-D_COUNT(`79c20466-5d0c-4115-ba3b-0672d0ea6098`)&quot;,&quot;formula&quot;:&quot;SUM(`c877ff1e-5e77-4108-a37a-79f1d5b37574`)-(AVG(`e1bcc301-ecd0-4cab-a2ca-809b4117bacf`)*2-MAX(`91f3c9d6-09b2-4346-8a37-859deb6123ec`)/3)-MIN(`a66ccab4-532e-40a7-8750-d581ad9991d1`)+COUNTA(`9a6dda9b-1520-401b-8966-dcf001b0e0c5`)-D_COUNT(`79c20466-5d0c-4115-ba3b-0672d0ea6098`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;c877ff1e-5e77-4108-a37a-79f1d5b37574&quot;},{&quot;id&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;e1bcc301-ecd0-4cab-a2ca-809b4117bacf&quot;},{&quot;id&quot;:&quot;87aed73a-0741-400f-b3ca-75430d780d99&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;87aed73a-0741-400f-b3ca-75430d780d99&quot;,&quot;name&quot;:&quot;twitter_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;87aed73a-0741-400f-b3ca-75430d780d99&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;91f3c9d6-09b2-4346-8a37-859deb6123ec&quot;},{&quot;id&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;name&quot;:&quot;total_count&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;6ca1591f-860f-46a5-9e7f-03e499bf337b&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;a66ccab4-532e-40a7-8750-d581ad9991d1&quot;},{&quot;id&quot;:&quot;10958325-fd42-4b7d-a187-0d3c75032fb7&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;10958325-fd42-4b7d-a187-0d3c75032fb7&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;10958325-fd42-4b7d-a187-0d3c75032fb7&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;9a6dda9b-1520-401b-8966-dcf001b0e0c5&quot;},{&quot;id&quot;:&quot;81190256-784e-4dca-ba33-80f46c1feb5c&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;81190256-784e-4dca-ba33-80f46c1feb5c&quot;,&quot;name&quot;:&quot;phone_country&quot;,&quot;dataType&quot;:&quot;STRING&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;81190256-784e-4dca-ba33-80f46c1feb5c&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;79c20466-5d0c-4115-ba3b-0672d0ea6098&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;5876867c-13db-4467-a78d-f27fe78916fa&quot;,&quot;aggregator&quot;:&quot;SUM(`total_count`)-(AVG(`total_count`)*2-MAX(`twitter_count`)/3)-MIN(`total_count`)+COUNTA(`Status`)-D_COUNT(`phone_country`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;5876867c-13db-4467-a78d-f27fe78916fa&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;52ddc275-c44d-4f22-840f-1e9c635bbdad&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:{&quot;field&quot;:{&quot;id&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;name&quot;:&quot;last_login_date&quot;,&quot;dataType&quot;:&quot;DATETIME&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;yyyy-MM-dd HH:mm:ss&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b2260ca6-188b-43ec-964d-1e53743a5448&quot;,&quot;type&quot;:&quot;dimension&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null},&quot;code&quot;:&quot;all_time&quot;,&quot;value&quot;:&quot;all_time&quot;},&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;date&quot;:{&quot;visible&quot;:false},&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;fcdbda43-295c-4fbb-833b-3ba1ec647494&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="1636259669">[2045.56]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Amazon S3_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/5876867c-13db-4467-a78d-f27fe78916fa/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oracle_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`dedfa986-dcae-46ea-9da0-7cf4ddbd5a7d`)+AVG(`91c94333-6933-4fa6-bf0c-39b7c37df31f`)-(MAX(`59abcae1-44d7-43fd-97e3-64c352c8e2f2`)*3-MIN(`0fb34423-9612-4fc4-8731-18b789794a5b`)/2)+COUNTA(`0e6f5ffe-8b9d-4a0a-8ad6-fd5d08c9f540`)-D_COUNT(`a943ee7a-5a43-4ca0-91e9-2ee65e7cb66a`)&quot;,&quot;formula&quot;:&quot;SUM(`dedfa986-dcae-46ea-9da0-7cf4ddbd5a7d`)+AVG(`91c94333-6933-4fa6-bf0c-39b7c37df31f`)-(MAX(`59abcae1-44d7-43fd-97e3-64c352c8e2f2`)*3-MIN(`0fb34423-9612-4fc4-8731-18b789794a5b`)/2)+COUNTA(`0e6f5ffe-8b9d-4a0a-8ad6-fd5d08c9f540`)-D_COUNT(`a943ee7a-5a43-4ca0-91e9-2ee65e7cb66a`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;67951b67-7c45-4775-bbb4-f6405d83fff6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;VARCHAR2&quot;,&quot;formulaId&quot;:&quot;dedfa986-dcae-46ea-9da0-7cf4ddbd5a7d&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;67951b67-7c45-4775-bbb4-f6405d83fff6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;VARCHAR2&quot;,&quot;formulaId&quot;:&quot;91c94333-6933-4fa6-bf0c-39b7c37df31f&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;67951b67-7c45-4775-bbb4-f6405d83fff6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;VARCHAR2&quot;,&quot;formulaId&quot;:&quot;59abcae1-44d7-43fd-97e3-64c352c8e2f2&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;67951b67-7c45-4775-bbb4-f6405d83fff6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;VARCHAR2&quot;,&quot;formulaId&quot;:&quot;0fb34423-9612-4fc4-8731-18b789794a5b&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;67951b67-7c45-4775-bbb4-f6405d83fff6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;VARCHAR2&quot;,&quot;formulaId&quot;:&quot;0e6f5ffe-8b9d-4a0a-8ad6-fd5d08c9f540&quot;},{&quot;id&quot;:&quot;Login_Active&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;67951b67-7c45-4775-bbb4-f6405d83fff6&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;Login_Active&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:&quot;VARCHAR2&quot;,&quot;formulaId&quot;:&quot;a943ee7a-5a43-4ca0-91e9-2ee65e7cb66a&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;7f79f44c-a029-41d5-9b66-3f6f62116f78&quot;,&quot;aggregator&quot;:&quot;SUM(`Login_Active`)+AVG(`Login_Active`)-(MAX(`Login_Active`)*3-MIN(`Login_Active`)/2)+COUNTA(`Login_Active`)-D_COUNT(`Login_Active`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oracle_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;7f79f44c-a029-41d5-9b66-3f6f62116f78&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;2b3ce7ad-d1c1-4721-83ea-d176b9125e80&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:null,&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;6c1625b4-3a42-4db9-860b-5c93e0744695&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="203746620">[1187.19]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oracle_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oracle_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/7f79f44c-a029-41d5-9b66-3f6f62116f78/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OneDrive_计算字段_创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;&quot;,&quot;code&quot;:&quot;&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;originalAggregator&quot;:&quot;SUM(`b2c8e2e2-8abf-4ebd-b1f0-f569a2a2d890`)-(AVG(`7acdb130-1f82-4d8d-b238-256ed80bbdaa`)/5+MAX(`345bbbb0-5d5e-41f0-8f46-df7f992b7324`)*2)+MIN(`e77ae117-ac65-4fd6-8942-149f248fc434`)-COUNTA(`5282de63-0763-47f5-8bd0-1e3a53a607a2`)+D_COUNT(`df9ea05a-e650-4381-81b6-7d4ff93a228e`)&quot;,&quot;formula&quot;:&quot;SUM(`b2c8e2e2-8abf-4ebd-b1f0-f569a2a2d890`)-(AVG(`7acdb130-1f82-4d8d-b238-256ed80bbdaa`)/5+MAX(`345bbbb0-5d5e-41f0-8f46-df7f992b7324`)*2)+MIN(`e77ae117-ac65-4fd6-8942-149f248fc434`)-COUNTA(`5282de63-0763-47f5-8bd0-1e3a53a607a2`)+D_COUNT(`df9ea05a-e650-4381-81b6-7d4ff93a228e`)&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;b2c8e2e2-8abf-4ebd-b1f0-f569a2a2d890&quot;},{&quot;id&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;7acdb130-1f82-4d8d-b238-256ed80bbdaa&quot;},{&quot;id&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;345bbbb0-5d5e-41f0-8f46-df7f992b7324&quot;},{&quot;id&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;e77ae117-ac65-4fd6-8942-149f248fc434&quot;},{&quot;id&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;name&quot;:&quot;Login_Active&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b6587d4a-a4c2-4fe0-b513-b59613c08b94&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;5282de63-0763-47f5-8bd0-1e3a53a607a2&quot;},{&quot;id&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;uuid&quot;:null,&quot;fieldId&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:null,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:1,&quot;containGroupFunction&quot;:false,&quot;code&quot;:&quot;b49aad1f-f59a-4c7d-bbae-5dcf1cc4dd4f&quot;,&quot;type&quot;:&quot;metrics&quot;,&quot;allowGroup&quot;:true},&quot;columnType&quot;:null,&quot;formulaId&quot;:&quot;df9ea05a-e650-4381-81b6-7d4ff93a228e&quot;}],&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;dsConnectionId&quot;:&quot;0168d36c-19ba-4327-ad12-ef662e6faa39&quot;,&quot;aggregator&quot;:&quot;SUM(`Login_Active`)-(AVG(`Status`)/5+MAX(`Login_Active`)*2)+MIN(`Status`)-COUNTA(`Login_Active`)+D_COUNT(`Status`)&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">fieldId</stringProp>
            <stringProp name="JSONPATH">$.data.fieldId</stringProp>
            <stringProp name="DEFAULT">0</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OneDrive_计算字段_数据正确性检查" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;widgetId&quot;:null,&quot;spaceId&quot;:&quot;862c1819-13de-4adc-a2ac-e885a6c28bed&quot;,&quot;panelId&quot;:&quot;d46002fc-3867-44de-b803-9fe1d1bbf369&quot;,&quot;dsConnectionId&quot;:&quot;0168d36c-19ba-4327-ad12-ef662e6faa39&quot;,&quot;name&quot;:&quot;&quot;,&quot;isTitleUpdate&quot;:&quot;0&quot;,&quot;graphType&quot;:&quot;table&quot;,&quot;widgetType&quot;:&quot;chart&quot;,&quot;fields&quot;:[{&quot;id&quot;:&quot;${fieldId}&quot;,&quot;uuid&quot;:&quot;5f1e122d-2f25-49eb-9668-8f6b120846a7&quot;,&quot;fieldId&quot;:&quot;${fieldId}&quot;,&quot;name&quot;:&quot;auto_test&quot;,&quot;dataType&quot;:&quot;NUMBER&quot;,&quot;calculateType&quot;:&quot;sum&quot;,&quot;dataFormat&quot;:&quot;&quot;,&quot;validateStatus&quot;:&quot;1&quot;,&quot;extra&quot;:{&quot;allowFilter&quot;:0,&quot;containGroupFunction&quot;:true,&quot;code&quot;:&quot;${fieldId}&quot;,&quot;type&quot;:&quot;compoundMetrics&quot;,&quot;allowGroup&quot;:false},&quot;columnType&quot;:null,&quot;granularity&quot;:null,&quot;type&quot;:&quot;yAxis&quot;,&quot;labelName&quot;:&quot;SUM&quot;,&quot;analysisFunctionType&quot;:null,&quot;containFunction&quot;:true,&quot;isCalculate&quot;:true}],&quot;sort&quot;:null,&quot;filters&quot;:null,&quot;segment&quot;:null,&quot;time&quot;:null,&quot;map&quot;:null,&quot;targetValue&quot;:&quot;&quot;,&quot;settings&quot;:{&quot;total&quot;:{&quot;visible&quot;:true,&quot;item&quot;:&quot;c5d9e020-b548-49f3-b763-bb54ef518fa3&quot;},&quot;tableSettings&quot;:{&quot;table&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;pageLength&quot;:3,&quot;grid&quot;:{&quot;wrap&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;col&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;row&quot;:{&quot;showGrid&quot;:true,&quot;gridColor&quot;:{&quot;color&quot;:&quot;#e9e9e9&quot;,&quot;type&quot;:&quot;theme&quot;}}}},&quot;tableHeader&quot;:{&quot;textWrap&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#bbbbbb&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;tableBody&quot;:{&quot;fontSize&quot;:&quot;14px&quot;,&quot;showNumber&quot;:false,&quot;row&quot;:{&quot;textWrap&quot;:false,&quot;even&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;odd&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#f9f9f9&quot;,&quot;type&quot;:&quot;theme&quot;}}},&quot;col&quot;:{&quot;default&quot;:{&quot;fontColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;transparent&quot;,&quot;type&quot;:&quot;custom&quot;}},&quot;settings&quot;:[]}},&quot;tableFooter&quot;:{&quot;showTotal&quot;:false,&quot;fontColor&quot;:{&quot;color&quot;:&quot;#444444&quot;,&quot;type&quot;:&quot;theme&quot;},&quot;cellBackgroundColor&quot;:{&quot;color&quot;:&quot;#ffffff&quot;,&quot;type&quot;:&quot;theme&quot;}},&quot;pagination&quot;:{&quot;showPagination&quot;:true,&quot;currentPage&quot;:1,&quot;pageLength&quot;:10}}},&quot;disconnectMessage&quot;:&quot;&quot;,&quot;isDemo&quot;:&quot;0&quot;,&quot;toolData&quot;:{&quot;extend&quot;:null},&quot;target&quot;:null}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/widgets/data/preview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="-821654757">[[&quot;auto_test&quot;]</stringProp>
              <stringProp name="-798929642">[-1700.11]]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OneDrive_计算字段_删除" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/calculatedFields/${fieldId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OneDrive_计算字段_数量检查" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/spaces/862c1819-13de-4adc-a2ac-e885a6c28bed/datasources/0168d36c-19ba-4327-ad12-ef662e6faa39/calculatedFields</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
              <stringProp name="463610502">&quot;data&quot;:[]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <hostname>true</hostname>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/data/www/qa/logs/datadeck_jp_CalculatedFields/jp_datadeck_CalculatedFields.txt</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/data/www/qa/logs/datadeck_jp_CalculatedFields/errlog/jp_datadeck_CalculatedFields_errlog.txt</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="过滤器" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524035322000</longProp>
        <longProp name="ThreadGroup.end_time">1524035322000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./DataSource_Filter.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,Path,requestdata,responsedata1,responsedata2,responsedata3,responsedata4,responsedata5,responsedata6,responsedata7,responsedata8,responsedata9,responsedata10,responsedata11,responsedata12,responsedata13,responsedata14,responsedata15,responsedata16,responsedata17,responsedata18,responsedata19,responsedata20,responsedata21,responsedata22,responsedata23,responsedata24,responsedata25,responsedata26</stringProp>
        </CSVDataSet>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;userEmail&quot;:&quot;dd_auto@ptmind.com&quot;,&quot;userPassword&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&quot;rememberMe&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/v2/users/signin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="getToken" enabled="true">
                <stringProp name="VAR">sid</stringProp>
                <stringProp name="JSONPATH">$.data.sid</stringProp>
                <stringProp name="DEFAULT">0</stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="112071598">${responsedata1}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 1);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
        </WhileController>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${requestdata}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${host}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">1500000</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">${Path}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="112071598">${responsedata1}</stringProp>
                <stringProp name="112071629">${responsedata2}</stringProp>
                <stringProp name="112071660">${responsedata3}</stringProp>
                <stringProp name="112071691">${responsedata4}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/data/www/qa/logs/datadeck_DataSource/ExcelCSV/jp_datadeck_interface.txt</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="errlog" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <hostname>true</hostname>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/data/www/qa/logs/datadeck_DataSource/ExcelCSV/errlog/jp_datadeck_interface_errlog.txt</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
