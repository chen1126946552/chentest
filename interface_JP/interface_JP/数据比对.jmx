<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">D:\apache-jmeter-3.2\lib\ext\fileoperter.jar,D:\apache-jmeter-3.2\lib\ext\token_jp.jar</stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="file" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="logpath" elementType="Argument">
            <stringProp name="Argument.name">logpath</stringProp>
            <stringProp name="Argument.value">D:/temp.xml</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="outcsvpath" elementType="Argument">
            <stringProp name="Argument.name">outcsvpath</stringProp>
            <stringProp name="Argument.value">D:/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="filepath" elementType="Argument">
            <stringProp name="Argument.name">filepath</stringProp>
            <stringProp name="Argument.value">E://ADS.TXT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate, br</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">zh-CN,zh;q=0.8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="dc_MySQL时间戳" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="dc_mysql_starttime" elementType="Argument">
            <stringProp name="Argument.name">dc_mysql_starttime</stringProp>
            <stringProp name="Argument.value">${__intSum(${__time(/1000,)},-172800,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dc_mysql_endtime" elementType="Argument">
            <stringProp name="Argument.name">dc_mysql_endtime</stringProp>
            <stringProp name="Argument.value">${__intSum(${__time(/1000,)},-172800,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="jpsid" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="jpsid_1" elementType="Argument">
            <stringProp name="Argument.name">jpsid_1</stringProp>
            <stringProp name="Argument.value">19e24d7b</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jpsid_2" elementType="Argument">
            <stringProp name="Argument.name">jpsid_2</stringProp>
            <stringProp name="Argument.value">49bdf04e</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jpsid_3" elementType="Argument">
            <stringProp name="Argument.name">jpsid_3</stringProp>
            <stringProp name="Argument.value">6b63ee3b</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jpsid_4" elementType="Argument">
            <stringProp name="Argument.name">jpsid_4</stringProp>
            <stringProp name="Argument.value">19fca91d</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="jpsid_5" elementType="Argument">
            <stringProp name="Argument.name">jpsid_5</stringProp>
            <stringProp name="Argument.value">1081ce62</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="tokenname" elementType="Argument">
            <stringProp name="Argument.name">tokenname</stringProp>
            <stringProp name="Argument.value">/token.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_jp" elementType="Argument">
            <stringProp name="Argument.name">host_jp</stringProp>
            <stringProp name="Argument.value">hqueryv2.ptengine.jp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="responestime" elementType="Argument">
            <stringProp name="Argument.name">responestime</stringProp>
            <stringProp name="Argument.value">70000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="event_host_jp" elementType="Argument">
            <stringProp name="Argument.name">event_host_jp</stringProp>
            <stringProp name="Argument.value">apiquery.ptengine.jp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1501667658000</longProp>
        <longProp name="ThreadGroup.end_time">1501667658000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.text.SimpleDateFormat;
import java.util.Calendar;
import bin.*;
Calendar calendar1 = Calendar.getInstance();
calendar1.add(Calendar.DATE, -2);
SimpleDateFormat sdf1 = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
xml2csv xc=new xml2csv();
xc.writecsv(&quot;${logpath}&quot;,&quot;${outcsvpath}&quot;+sdf1.format(calendar1.getTime())+&quot;.txt&quot;);
xc.delFile(&quot;${logpath}&quot;);
xc.writefile(&quot;${filepath}&quot;,&quot;${outcsvpath}&quot;,sdf1.format(calendar1.getTime())+&quot;.txt&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mysql_INTERFACE_DC" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1499670121000</longProp>
        <longProp name="ThreadGroup.end_time">1499670121000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import name123.*;
vars.putObject(&quot;path&quot;, System.getProperty(&quot;user.dir&quot;));
token_jp token = new token_jp();
token.WriteStringToFile5(vars.getObject(&quot;path&quot;)+&quot;${tokenname}&quot;);
vars.putObject(&quot;tokenfile&quot;,(vars.getObject(&quot;path&quot;)+&quot;${tokenname}&quot;));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dc_case" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">gb2312</stringProp>
          <stringProp name="filename">./dc_case_jp.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">name,path1,type,path2,path3,path4,path5,path6,rangetype,path7,path8,path9,path10,mainitem,path11,subitem,path12,assertion1,assertion2</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
          <stringProp name="ForeachController.inputVal">jpsid</stringProp>
          <stringProp name="ForeachController.returnVal">sid</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
          <stringProp name="ForeachController.startIndex">0</stringProp>
          <stringProp name="ForeachController.endIndex">5</stringProp>
        </ForeachController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">${_StringFromFile(${filepath},,,)}</stringProp>
            <stringProp name="fileEncoding">utf-8</stringProp>
            <stringProp name="variableNames">interfacename,threadname,responsedata</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">\t</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.thread</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.putObject(&quot;INCREMENT&quot;, 0);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;ISCONTINUE&quot;, true);
vars.putObject(&quot;MAXLOOP&quot;, 4);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell((Boolean)vars.getObject(&quot;ISCONTINUE&quot;))}</stringProp>
          </WhileController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.util.JMeterUtils;
import org.apache.jmeter.samplers.SampleResult;
import org.apache.jmeter.assertions.AssertionResult;

SampleResult prev_result=ctx.getPreviousResult(); 
Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);

if (prev_result  !=  null  &amp;&amp; !prev_result.isSuccessful()) 
{
	vars.putObject(&quot;ANYSAMPLEFAIL&quot;, true);
	if (increment.intValue() &lt; (maxloop.intValue()-1))
	{
		prev_result.setSuccessful(false);
	}		
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${name}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${path1}${type}${path2}${dc_mysql_starttime}${path3}${dc_mysql_endtime}${path4}${path5}${path6}${rangetype}${path7}${sid}${path8}${sid}${path9}${_StringFromFile(${__BeanShell((String)vars.getObject(&quot;tokenfile&quot;))},,,)}${path10}${mainitem}${path11}${subitem}${path12}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host_jp}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout">${responestime}</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1936047365">${responsedata}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">Integer increment = (Integer)vars.getObject(&quot;INCREMENT&quot;);
increment++;
Boolean requestResult = (Boolean)vars.getObject(&quot;ANYSAMPLEFAIL&quot;);
Integer maxloop = (Integer)vars.getObject(&quot;MAXLOOP&quot;);
boolean iscontinue = (increment &lt; maxloop) &amp;&amp; requestResult.booleanValue();
vars.putObject(&quot;ISCONTINUE&quot;, iscontinue);
vars.putObject(&quot;ANYSAMPLEFAIL&quot;, false);
vars.putObject(&quot;INCREMENT&quot;, increment );</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Mysql_INTERFACE_DC" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>false</timestamp>
              <success>false</success>
              <label>true</label>
              <code>false</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
